{"ast":null,"code":"/**\n * @fileoverview Defines a schema for configs.\n * @author Sylvan Mably\n */\n\n\"use strict\";\n\nconst baseConfigProperties = {\n  $schema: {\n    type: \"string\"\n  },\n  env: {\n    type: \"object\"\n  },\n  extends: {\n    $ref: \"#/definitions/stringOrStrings\"\n  },\n  globals: {\n    type: \"object\"\n  },\n  overrides: {\n    type: \"array\",\n    items: {\n      $ref: \"#/definitions/overrideConfig\"\n    },\n    additionalItems: false\n  },\n  parser: {\n    type: [\"string\", \"null\"]\n  },\n  parserOptions: {\n    type: \"object\"\n  },\n  plugins: {\n    type: \"array\"\n  },\n  processor: {\n    type: \"string\"\n  },\n  rules: {\n    type: \"object\"\n  },\n  settings: {\n    type: \"object\"\n  },\n  noInlineConfig: {\n    type: \"boolean\"\n  },\n  reportUnusedDisableDirectives: {\n    type: \"boolean\"\n  },\n  ecmaFeatures: {\n    type: \"object\"\n  } // deprecated; logs a warning when used\n};\n\nconst configSchema = {\n  definitions: {\n    stringOrStrings: {\n      oneOf: [{\n        type: \"string\"\n      }, {\n        type: \"array\",\n        items: {\n          type: \"string\"\n        },\n        additionalItems: false\n      }]\n    },\n    stringOrStringsRequired: {\n      oneOf: [{\n        type: \"string\"\n      }, {\n        type: \"array\",\n        items: {\n          type: \"string\"\n        },\n        additionalItems: false,\n        minItems: 1\n      }]\n    },\n    // Config at top-level.\n    objectConfig: {\n      type: \"object\",\n      properties: {\n        root: {\n          type: \"boolean\"\n        },\n        ignorePatterns: {\n          $ref: \"#/definitions/stringOrStrings\"\n        },\n        ...baseConfigProperties\n      },\n      additionalProperties: false\n    },\n    // Config in `overrides`.\n    overrideConfig: {\n      type: \"object\",\n      properties: {\n        excludedFiles: {\n          $ref: \"#/definitions/stringOrStrings\"\n        },\n        files: {\n          $ref: \"#/definitions/stringOrStringsRequired\"\n        },\n        ...baseConfigProperties\n      },\n      required: [\"files\"],\n      additionalProperties: false\n    }\n  },\n  $ref: \"#/definitions/objectConfig\"\n};\nmodule.exports = configSchema;","map":{"version":3,"names":["baseConfigProperties","$schema","type","env","extends","$ref","globals","overrides","items","additionalItems","parser","parserOptions","plugins","processor","rules","settings","noInlineConfig","reportUnusedDisableDirectives","ecmaFeatures","configSchema","definitions","stringOrStrings","oneOf","stringOrStringsRequired","minItems","objectConfig","properties","root","ignorePatterns","additionalProperties","overrideConfig","excludedFiles","files","required","module","exports"],"sources":["D:/Project/YM~Cloud/cloud-front/node_modules/@eslint/eslintrc/conf/config-schema.js"],"sourcesContent":["/**\n * @fileoverview Defines a schema for configs.\n * @author Sylvan Mably\n */\n\n\"use strict\";\n\nconst baseConfigProperties = {\n    $schema: { type: \"string\" },\n    env: { type: \"object\" },\n    extends: { $ref: \"#/definitions/stringOrStrings\" },\n    globals: { type: \"object\" },\n    overrides: {\n        type: \"array\",\n        items: { $ref: \"#/definitions/overrideConfig\" },\n        additionalItems: false\n    },\n    parser: { type: [\"string\", \"null\"] },\n    parserOptions: { type: \"object\" },\n    plugins: { type: \"array\" },\n    processor: { type: \"string\" },\n    rules: { type: \"object\" },\n    settings: { type: \"object\" },\n    noInlineConfig: { type: \"boolean\" },\n    reportUnusedDisableDirectives: { type: \"boolean\" },\n\n    ecmaFeatures: { type: \"object\" } // deprecated; logs a warning when used\n};\n\nconst configSchema = {\n    definitions: {\n        stringOrStrings: {\n            oneOf: [\n                { type: \"string\" },\n                {\n                    type: \"array\",\n                    items: { type: \"string\" },\n                    additionalItems: false\n                }\n            ]\n        },\n        stringOrStringsRequired: {\n            oneOf: [\n                { type: \"string\" },\n                {\n                    type: \"array\",\n                    items: { type: \"string\" },\n                    additionalItems: false,\n                    minItems: 1\n                }\n            ]\n        },\n\n        // Config at top-level.\n        objectConfig: {\n            type: \"object\",\n            properties: {\n                root: { type: \"boolean\" },\n                ignorePatterns: { $ref: \"#/definitions/stringOrStrings\" },\n                ...baseConfigProperties\n            },\n            additionalProperties: false\n        },\n\n        // Config in `overrides`.\n        overrideConfig: {\n            type: \"object\",\n            properties: {\n                excludedFiles: { $ref: \"#/definitions/stringOrStrings\" },\n                files: { $ref: \"#/definitions/stringOrStringsRequired\" },\n                ...baseConfigProperties\n            },\n            required: [\"files\"],\n            additionalProperties: false\n        }\n    },\n\n    $ref: \"#/definitions/objectConfig\"\n};\n\nmodule.exports = configSchema;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,oBAAoB,GAAG;EACzBC,OAAO,EAAE;IAAEC,IAAI,EAAE;EAAS,CAAC;EAC3BC,GAAG,EAAE;IAAED,IAAI,EAAE;EAAS,CAAC;EACvBE,OAAO,EAAE;IAAEC,IAAI,EAAE;EAAgC,CAAC;EAClDC,OAAO,EAAE;IAAEJ,IAAI,EAAE;EAAS,CAAC;EAC3BK,SAAS,EAAE;IACPL,IAAI,EAAE,OAAO;IACbM,KAAK,EAAE;MAAEH,IAAI,EAAE;IAA+B,CAAC;IAC/CI,eAAe,EAAE;EACrB,CAAC;EACDC,MAAM,EAAE;IAAER,IAAI,EAAE,CAAC,QAAQ,EAAE,MAAM;EAAE,CAAC;EACpCS,aAAa,EAAE;IAAET,IAAI,EAAE;EAAS,CAAC;EACjCU,OAAO,EAAE;IAAEV,IAAI,EAAE;EAAQ,CAAC;EAC1BW,SAAS,EAAE;IAAEX,IAAI,EAAE;EAAS,CAAC;EAC7BY,KAAK,EAAE;IAAEZ,IAAI,EAAE;EAAS,CAAC;EACzBa,QAAQ,EAAE;IAAEb,IAAI,EAAE;EAAS,CAAC;EAC5Bc,cAAc,EAAE;IAAEd,IAAI,EAAE;EAAU,CAAC;EACnCe,6BAA6B,EAAE;IAAEf,IAAI,EAAE;EAAU,CAAC;EAElDgB,YAAY,EAAE;IAAEhB,IAAI,EAAE;EAAS,CAAC,CAAC;AACrC,CAAC;;AAED,MAAMiB,YAAY,GAAG;EACjBC,WAAW,EAAE;IACTC,eAAe,EAAE;MACbC,KAAK,EAAE,CACH;QAAEpB,IAAI,EAAE;MAAS,CAAC,EAClB;QACIA,IAAI,EAAE,OAAO;QACbM,KAAK,EAAE;UAAEN,IAAI,EAAE;QAAS,CAAC;QACzBO,eAAe,EAAE;MACrB,CAAC;IAET,CAAC;IACDc,uBAAuB,EAAE;MACrBD,KAAK,EAAE,CACH;QAAEpB,IAAI,EAAE;MAAS,CAAC,EAClB;QACIA,IAAI,EAAE,OAAO;QACbM,KAAK,EAAE;UAAEN,IAAI,EAAE;QAAS,CAAC;QACzBO,eAAe,EAAE,KAAK;QACtBe,QAAQ,EAAE;MACd,CAAC;IAET,CAAC;IAED;IACAC,YAAY,EAAE;MACVvB,IAAI,EAAE,QAAQ;MACdwB,UAAU,EAAE;QACRC,IAAI,EAAE;UAAEzB,IAAI,EAAE;QAAU,CAAC;QACzB0B,cAAc,EAAE;UAAEvB,IAAI,EAAE;QAAgC,CAAC;QACzD,GAAGL;MACP,CAAC;MACD6B,oBAAoB,EAAE;IAC1B,CAAC;IAED;IACAC,cAAc,EAAE;MACZ5B,IAAI,EAAE,QAAQ;MACdwB,UAAU,EAAE;QACRK,aAAa,EAAE;UAAE1B,IAAI,EAAE;QAAgC,CAAC;QACxD2B,KAAK,EAAE;UAAE3B,IAAI,EAAE;QAAwC,CAAC;QACxD,GAAGL;MACP,CAAC;MACDiC,QAAQ,EAAE,CAAC,OAAO,CAAC;MACnBJ,oBAAoB,EAAE;IAC1B;EACJ,CAAC;EAEDxB,IAAI,EAAE;AACV,CAAC;AAED6B,MAAM,CAACC,OAAO,GAAGhB,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}