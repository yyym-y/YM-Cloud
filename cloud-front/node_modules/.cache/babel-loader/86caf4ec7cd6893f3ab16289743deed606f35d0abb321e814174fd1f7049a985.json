{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n// Approach:\n//\n// 1. Get the minimatch set\n// 2. For each pattern in the set, PROCESS(pattern, false)\n// 3. Store matches per-set, then uniq them\n//\n// PROCESS(pattern, inGlobStar)\n// Get the first [n] items from pattern that are all strings\n// Join these together.  This is PREFIX.\n//   If there is no more remaining, then stat(PREFIX) and\n//   add to matches if it succeeds.  END.\n//\n// If inGlobStar and PREFIX is symlink and points to dir\n//   set ENTRIES = []\n// else readdir(PREFIX) as ENTRIES\n//   If fail, END\n//\n// with ENTRIES\n//   If pattern[n] is GLOBSTAR\n//     // handle the case where the globstar match is empty\n//     // by pruning it out, and testing the resulting pattern\n//     PROCESS(pattern[0..n] + pattern[n+1 .. $], false)\n//     // handle other cases.\n//     for ENTRY in ENTRIES (not dotfiles)\n//       // attach globstar + tail onto the entry\n//       // Mark that this entry is a globstar match\n//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $], true)\n//\n//   else // not globstar\n//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)\n//       Test ENTRY against pattern[n]\n//       If fails, continue\n//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])\n//\n// Caveat:\n//   Cache all stats and readdirs results to minimize syscall.  Since all\n//   we ever care about is existence and directory-ness, we can just keep\n//   `true` for files, and [children,...] for directories, or `false` for\n//   things that don't exist.\n\nmodule.exports = glob;\nvar rp = require('fs.realpath');\nvar minimatch = require('minimatch');\nvar Minimatch = minimatch.Minimatch;\nvar inherits = require('inherits');\nvar EE = require('events').EventEmitter;\nvar path = require('path');\nvar assert = require('assert');\nvar isAbsolute = require('path-is-absolute');\nvar globSync = require('./sync.js');\nvar common = require('./common.js');\nvar setopts = common.setopts;\nvar ownProp = common.ownProp;\nvar inflight = require('inflight');\nvar util = require('util');\nvar childrenIgnored = common.childrenIgnored;\nvar isIgnored = common.isIgnored;\nvar once = require('once');\nfunction glob(pattern, options, cb) {\n  if (typeof options === 'function') cb = options, options = {};\n  if (!options) options = {};\n  if (options.sync) {\n    if (cb) throw new TypeError('callback provided to sync glob');\n    return globSync(pattern, options);\n  }\n  return new Glob(pattern, options, cb);\n}\nglob.sync = globSync;\nvar GlobSync = glob.GlobSync = globSync.GlobSync;\n\n// old api surface\nglob.glob = glob;\nfunction extend(origin, add) {\n  if (add === null || typeof add !== 'object') {\n    return origin;\n  }\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n}\nglob.hasMagic = function (pattern, options_) {\n  var options = extend({}, options_);\n  options.noprocess = true;\n  var g = new Glob(pattern, options);\n  var set = g.minimatch.set;\n  if (!pattern) return false;\n  if (set.length > 1) return true;\n  for (var j = 0; j < set[0].length; j++) {\n    if (typeof set[0][j] !== 'string') return true;\n  }\n  return false;\n};\nglob.Glob = Glob;\ninherits(Glob, EE);\nfunction Glob(pattern, options, cb) {\n  if (typeof options === 'function') {\n    cb = options;\n    options = null;\n  }\n  if (options && options.sync) {\n    if (cb) throw new TypeError('callback provided to sync glob');\n    return new GlobSync(pattern, options);\n  }\n  if (!(this instanceof Glob)) return new Glob(pattern, options, cb);\n  setopts(this, pattern, options);\n  this._didRealPath = false;\n\n  // process each pattern in the minimatch set\n  var n = this.minimatch.set.length;\n\n  // The matches are stored as {<filename>: true,...} so that\n  // duplicates are automagically pruned.\n  // Later, we do an Object.keys() on these.\n  // Keep them as a list so we can fill in when nonull is set.\n  this.matches = new Array(n);\n  if (typeof cb === 'function') {\n    cb = once(cb);\n    this.on('error', cb);\n    this.on('end', function (matches) {\n      cb(null, matches);\n    });\n  }\n  var self = this;\n  this._processing = 0;\n  this._emitQueue = [];\n  this._processQueue = [];\n  this.paused = false;\n  if (this.noprocess) return this;\n  if (n === 0) return done();\n  var sync = true;\n  for (var i = 0; i < n; i++) {\n    this._process(this.minimatch.set[i], i, false, done);\n  }\n  sync = false;\n  function done() {\n    --self._processing;\n    if (self._processing <= 0) {\n      if (sync) {\n        process.nextTick(function () {\n          self._finish();\n        });\n      } else {\n        self._finish();\n      }\n    }\n  }\n}\nGlob.prototype._finish = function () {\n  assert(this instanceof Glob);\n  if (this.aborted) return;\n  if (this.realpath && !this._didRealpath) return this._realpath();\n  common.finish(this);\n  this.emit('end', this.found);\n};\nGlob.prototype._realpath = function () {\n  if (this._didRealpath) return;\n  this._didRealpath = true;\n  var n = this.matches.length;\n  if (n === 0) return this._finish();\n  var self = this;\n  for (var i = 0; i < this.matches.length; i++) this._realpathSet(i, next);\n  function next() {\n    if (--n === 0) self._finish();\n  }\n};\nGlob.prototype._realpathSet = function (index, cb) {\n  var matchset = this.matches[index];\n  if (!matchset) return cb();\n  var found = Object.keys(matchset);\n  var self = this;\n  var n = found.length;\n  if (n === 0) return cb();\n  var set = this.matches[index] = Object.create(null);\n  found.forEach(function (p, i) {\n    // If there's a problem with the stat, then it means that\n    // one or more of the links in the realpath couldn't be\n    // resolved.  just return the abs value in that case.\n    p = self._makeAbs(p);\n    rp.realpath(p, self.realpathCache, function (er, real) {\n      if (!er) set[real] = true;else if (er.syscall === 'stat') set[p] = true;else self.emit('error', er); // srsly wtf right here\n\n      if (--n === 0) {\n        self.matches[index] = set;\n        cb();\n      }\n    });\n  });\n};\nGlob.prototype._mark = function (p) {\n  return common.mark(this, p);\n};\nGlob.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f);\n};\nGlob.prototype.abort = function () {\n  this.aborted = true;\n  this.emit('abort');\n};\nGlob.prototype.pause = function () {\n  if (!this.paused) {\n    this.paused = true;\n    this.emit('pause');\n  }\n};\nGlob.prototype.resume = function () {\n  if (this.paused) {\n    this.emit('resume');\n    this.paused = false;\n    if (this._emitQueue.length) {\n      var eq = this._emitQueue.slice(0);\n      this._emitQueue.length = 0;\n      for (var i = 0; i < eq.length; i++) {\n        var e = eq[i];\n        this._emitMatch(e[0], e[1]);\n      }\n    }\n    if (this._processQueue.length) {\n      var pq = this._processQueue.slice(0);\n      this._processQueue.length = 0;\n      for (var i = 0; i < pq.length; i++) {\n        var p = pq[i];\n        this._processing--;\n        this._process(p[0], p[1], p[2], p[3]);\n      }\n    }\n  }\n};\nGlob.prototype._process = function (pattern, index, inGlobStar, cb) {\n  assert(this instanceof Glob);\n  assert(typeof cb === 'function');\n  if (this.aborted) return;\n  this._processing++;\n  if (this.paused) {\n    this._processQueue.push([pattern, index, inGlobStar, cb]);\n    return;\n  }\n\n  //console.error('PROCESS %d', this._processing, pattern)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0;\n  while (typeof pattern[n] === 'string') {\n    n++;\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // see if there's anything else\n  var prefix;\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index, cb);\n      return;\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null;\n      break;\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/');\n      break;\n  }\n  var remain = pattern.slice(n);\n\n  // get the list of entries.\n  var read;\n  if (prefix === null) read = '.';else if (isAbsolute(prefix) || isAbsolute(pattern.map(function (p) {\n    return typeof p === 'string' ? p : '[*]';\n  }).join('/'))) {\n    if (!prefix || !isAbsolute(prefix)) prefix = '/' + prefix;\n    read = prefix;\n  } else read = prefix;\n  var abs = this._makeAbs(read);\n\n  //if ignored, skip _processing\n  if (childrenIgnored(this, read)) return cb();\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR;\n  if (isGlobStar) this._processGlobStar(prefix, read, abs, remain, index, inGlobStar, cb);else this._processReaddir(prefix, read, abs, remain, index, inGlobStar, cb);\n};\nGlob.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this;\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    return self._processReaddir2(prefix, read, abs, remain, index, inGlobStar, entries, cb);\n  });\n};\nGlob.prototype._processReaddir2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries) return cb();\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0];\n  var negate = !!this.minimatch.negate;\n  var rawGlob = pn._glob;\n  var dotOk = this.dot || rawGlob.charAt(0) === '.';\n  var matchedEntries = [];\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i];\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m;\n      if (negate && !prefix) {\n        m = !e.match(pn);\n      } else {\n        m = e.match(pn);\n      }\n      if (m) matchedEntries.push(e);\n    }\n  }\n\n  //console.error('prd2', prefix, entries, remain[0]._glob, matchedEntries)\n\n  var len = matchedEntries.length;\n  // If there are no matched entries, then nothing matches.\n  if (len === 0) return cb();\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index]) this.matches[index] = Object.create(null);\n    for (var i = 0; i < len; i++) {\n      var e = matchedEntries[i];\n      if (prefix) {\n        if (prefix !== '/') e = prefix + '/' + e;else e = prefix + e;\n      }\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e);\n      }\n      this._emitMatch(index, e);\n    }\n    // This was the last one, and no stats were needed\n    return cb();\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift();\n  for (var i = 0; i < len; i++) {\n    var e = matchedEntries[i];\n    var newPattern;\n    if (prefix) {\n      if (prefix !== '/') e = prefix + '/' + e;else e = prefix + e;\n    }\n    this._process([e].concat(remain), index, inGlobStar, cb);\n  }\n  cb();\n};\nGlob.prototype._emitMatch = function (index, e) {\n  if (this.aborted) return;\n  if (isIgnored(this, e)) return;\n  if (this.paused) {\n    this._emitQueue.push([index, e]);\n    return;\n  }\n  var abs = isAbsolute(e) ? e : this._makeAbs(e);\n  if (this.mark) e = this._mark(e);\n  if (this.absolute) e = abs;\n  if (this.matches[index][e]) return;\n  if (this.nodir) {\n    var c = this.cache[abs];\n    if (c === 'DIR' || Array.isArray(c)) return;\n  }\n  this.matches[index][e] = true;\n  var st = this.statCache[abs];\n  if (st) this.emit('stat', e, st);\n  this.emit('match', e);\n};\nGlob.prototype._readdirInGlobStar = function (abs, cb) {\n  if (this.aborted) return;\n\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow) return this._readdir(abs, false, cb);\n  var lstatkey = 'lstat\\0' + abs;\n  var self = this;\n  var lstatcb = inflight(lstatkey, lstatcb_);\n  if (lstatcb) self.fs.lstat(abs, lstatcb);\n  function lstatcb_(er, lstat) {\n    if (er && er.code === 'ENOENT') return cb();\n    var isSym = lstat && lstat.isSymbolicLink();\n    self.symlinks[abs] = isSym;\n\n    // If it's not a symlink or a dir, then it's definitely a regular file.\n    // don't bother doing a readdir in that case.\n    if (!isSym && lstat && !lstat.isDirectory()) {\n      self.cache[abs] = 'FILE';\n      cb();\n    } else self._readdir(abs, false, cb);\n  }\n};\nGlob.prototype._readdir = function (abs, inGlobStar, cb) {\n  if (this.aborted) return;\n  cb = inflight('readdir\\0' + abs + '\\0' + inGlobStar, cb);\n  if (!cb) return;\n\n  //console.error('RD %j %j', +inGlobStar, abs)\n  if (inGlobStar && !ownProp(this.symlinks, abs)) return this._readdirInGlobStar(abs, cb);\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs];\n    if (!c || c === 'FILE') return cb();\n    if (Array.isArray(c)) return cb(null, c);\n  }\n  var self = this;\n  self.fs.readdir(abs, readdirCb(this, abs, cb));\n};\nfunction readdirCb(self, abs, cb) {\n  return function (er, entries) {\n    if (er) self._readdirError(abs, er, cb);else self._readdirEntries(abs, entries, cb);\n  };\n}\nGlob.prototype._readdirEntries = function (abs, entries, cb) {\n  if (this.aborted) return;\n\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i++) {\n      var e = entries[i];\n      if (abs === '/') e = abs + e;else e = abs + '/' + e;\n      this.cache[e] = true;\n    }\n  }\n  this.cache[abs] = entries;\n  return cb(null, entries);\n};\nGlob.prototype._readdirError = function (f, er, cb) {\n  if (this.aborted) return;\n\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR':\n      // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f);\n      this.cache[abs] = 'FILE';\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd);\n        error.path = this.cwd;\n        error.code = er.code;\n        this.emit('error', error);\n        this.abort();\n      }\n      break;\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false;\n      break;\n    default:\n      // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false;\n      if (this.strict) {\n        this.emit('error', er);\n        // If the error is handled, then we abort\n        // if not, we threw out of here\n        this.abort();\n      }\n      if (!this.silent) console.error('glob error', er);\n      break;\n  }\n  return cb();\n};\nGlob.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this;\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    self._processGlobStar2(prefix, read, abs, remain, index, inGlobStar, entries, cb);\n  });\n};\nGlob.prototype._processGlobStar2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n  //console.error('pgs2', prefix, remain[0], entries)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries) return cb();\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1);\n  var gspref = prefix ? [prefix] : [];\n  var noGlobStar = gspref.concat(remainWithoutGlobStar);\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false, cb);\n  var isSym = this.symlinks[abs];\n  var len = entries.length;\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar) return cb();\n  for (var i = 0; i < len; i++) {\n    var e = entries[i];\n    if (e.charAt(0) === '.' && !this.dot) continue;\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar);\n    this._process(instead, index, true, cb);\n    var below = gspref.concat(entries[i], remain);\n    this._process(below, index, true, cb);\n  }\n  cb();\n};\nGlob.prototype._processSimple = function (prefix, index, cb) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var self = this;\n  this._stat(prefix, function (er, exists) {\n    self._processSimple2(prefix, index, er, exists, cb);\n  });\n};\nGlob.prototype._processSimple2 = function (prefix, index, er, exists, cb) {\n  //console.error('ps2', prefix, exists)\n\n  if (!this.matches[index]) this.matches[index] = Object.create(null);\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists) return cb();\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix);\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix);\n    } else {\n      prefix = path.resolve(this.root, prefix);\n      if (trail) prefix += '/';\n    }\n  }\n  if (process.platform === 'win32') prefix = prefix.replace(/\\\\/g, '/');\n\n  // Mark this as a match\n  this._emitMatch(index, prefix);\n  cb();\n};\n\n// Returns either 'DIR', 'FILE', or false\nGlob.prototype._stat = function (f, cb) {\n  var abs = this._makeAbs(f);\n  var needDir = f.slice(-1) === '/';\n  if (f.length > this.maxLength) return cb();\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs];\n    if (Array.isArray(c)) c = 'DIR';\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR') return cb(null, c);\n    if (needDir && c === 'FILE') return cb();\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists;\n  var stat = this.statCache[abs];\n  if (stat !== undefined) {\n    if (stat === false) return cb(null, stat);else {\n      var type = stat.isDirectory() ? 'DIR' : 'FILE';\n      if (needDir && type === 'FILE') return cb();else return cb(null, type, stat);\n    }\n  }\n  var self = this;\n  var statcb = inflight('stat\\0' + abs, lstatcb_);\n  if (statcb) self.fs.lstat(abs, statcb);\n  function lstatcb_(er, lstat) {\n    if (lstat && lstat.isSymbolicLink()) {\n      // If it's a symlink, then treat it as the target, unless\n      // the target does not exist, then treat it as a file.\n      return self.fs.stat(abs, function (er, stat) {\n        if (er) self._stat2(f, abs, null, lstat, cb);else self._stat2(f, abs, er, stat, cb);\n      });\n    } else {\n      self._stat2(f, abs, er, lstat, cb);\n    }\n  }\n};\nGlob.prototype._stat2 = function (f, abs, er, stat, cb) {\n  if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n    this.statCache[abs] = false;\n    return cb();\n  }\n  var needDir = f.slice(-1) === '/';\n  this.statCache[abs] = stat;\n  if (abs.slice(-1) === '/' && stat && !stat.isDirectory()) return cb(null, false, stat);\n  var c = true;\n  if (stat) c = stat.isDirectory() ? 'DIR' : 'FILE';\n  this.cache[abs] = this.cache[abs] || c;\n  if (needDir && c === 'FILE') return cb();\n  return cb(null, c, stat);\n};","map":{"version":3,"names":["module","exports","glob","rp","require","minimatch","Minimatch","inherits","EE","EventEmitter","path","assert","isAbsolute","globSync","common","setopts","ownProp","inflight","util","childrenIgnored","isIgnored","once","pattern","options","cb","sync","TypeError","Glob","GlobSync","extend","origin","add","keys","Object","i","length","hasMagic","options_","noprocess","g","set","j","_didRealPath","n","matches","Array","on","self","_processing","_emitQueue","_processQueue","paused","done","_process","process","nextTick","_finish","prototype","aborted","realpath","_didRealpath","_realpath","finish","emit","found","_realpathSet","next","index","matchset","create","forEach","p","_makeAbs","realpathCache","er","real","syscall","_mark","mark","f","makeAbs","abort","pause","resume","eq","slice","e","_emitMatch","pq","inGlobStar","push","prefix","_processSimple","join","remain","read","map","abs","isGlobStar","GLOBSTAR","_processGlobStar","_processReaddir","_readdir","entries","_processReaddir2","pn","negate","rawGlob","_glob","dotOk","dot","charAt","matchedEntries","m","match","len","stat","nomount","root","shift","newPattern","concat","absolute","nodir","c","cache","isArray","st","statCache","_readdirInGlobStar","follow","lstatkey","lstatcb","lstatcb_","fs","lstat","code","isSym","isSymbolicLink","symlinks","isDirectory","readdir","readdirCb","_readdirError","_readdirEntries","cwdAbs","error","Error","cwd","strict","silent","console","_processGlobStar2","remainWithoutGlobStar","gspref","noGlobStar","instead","below","_stat","exists","_processSimple2","trail","test","resolve","platform","replace","needDir","maxLength","undefined","type","statcb","_stat2"],"sources":["D:/Project/YM~Cloud/cloud-front/node_modules/glob/glob.js"],"sourcesContent":["// Approach:\n//\n// 1. Get the minimatch set\n// 2. For each pattern in the set, PROCESS(pattern, false)\n// 3. Store matches per-set, then uniq them\n//\n// PROCESS(pattern, inGlobStar)\n// Get the first [n] items from pattern that are all strings\n// Join these together.  This is PREFIX.\n//   If there is no more remaining, then stat(PREFIX) and\n//   add to matches if it succeeds.  END.\n//\n// If inGlobStar and PREFIX is symlink and points to dir\n//   set ENTRIES = []\n// else readdir(PREFIX) as ENTRIES\n//   If fail, END\n//\n// with ENTRIES\n//   If pattern[n] is GLOBSTAR\n//     // handle the case where the globstar match is empty\n//     // by pruning it out, and testing the resulting pattern\n//     PROCESS(pattern[0..n] + pattern[n+1 .. $], false)\n//     // handle other cases.\n//     for ENTRY in ENTRIES (not dotfiles)\n//       // attach globstar + tail onto the entry\n//       // Mark that this entry is a globstar match\n//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $], true)\n//\n//   else // not globstar\n//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)\n//       Test ENTRY against pattern[n]\n//       If fails, continue\n//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])\n//\n// Caveat:\n//   Cache all stats and readdirs results to minimize syscall.  Since all\n//   we ever care about is existence and directory-ness, we can just keep\n//   `true` for files, and [children,...] for directories, or `false` for\n//   things that don't exist.\n\nmodule.exports = glob\n\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar inherits = require('inherits')\nvar EE = require('events').EventEmitter\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar globSync = require('./sync.js')\nvar common = require('./common.js')\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar inflight = require('inflight')\nvar util = require('util')\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nvar once = require('once')\n\nfunction glob (pattern, options, cb) {\n  if (typeof options === 'function') cb = options, options = {}\n  if (!options) options = {}\n\n  if (options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return globSync(pattern, options)\n  }\n\n  return new Glob(pattern, options, cb)\n}\n\nglob.sync = globSync\nvar GlobSync = glob.GlobSync = globSync.GlobSync\n\n// old api surface\nglob.glob = glob\n\nfunction extend (origin, add) {\n  if (add === null || typeof add !== 'object') {\n    return origin\n  }\n\n  var keys = Object.keys(add)\n  var i = keys.length\n  while (i--) {\n    origin[keys[i]] = add[keys[i]]\n  }\n  return origin\n}\n\nglob.hasMagic = function (pattern, options_) {\n  var options = extend({}, options_)\n  options.noprocess = true\n\n  var g = new Glob(pattern, options)\n  var set = g.minimatch.set\n\n  if (!pattern)\n    return false\n\n  if (set.length > 1)\n    return true\n\n  for (var j = 0; j < set[0].length; j++) {\n    if (typeof set[0][j] !== 'string')\n      return true\n  }\n\n  return false\n}\n\nglob.Glob = Glob\ninherits(Glob, EE)\nfunction Glob (pattern, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = null\n  }\n\n  if (options && options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return new GlobSync(pattern, options)\n  }\n\n  if (!(this instanceof Glob))\n    return new Glob(pattern, options, cb)\n\n  setopts(this, pattern, options)\n  this._didRealPath = false\n\n  // process each pattern in the minimatch set\n  var n = this.minimatch.set.length\n\n  // The matches are stored as {<filename>: true,...} so that\n  // duplicates are automagically pruned.\n  // Later, we do an Object.keys() on these.\n  // Keep them as a list so we can fill in when nonull is set.\n  this.matches = new Array(n)\n\n  if (typeof cb === 'function') {\n    cb = once(cb)\n    this.on('error', cb)\n    this.on('end', function (matches) {\n      cb(null, matches)\n    })\n  }\n\n  var self = this\n  this._processing = 0\n\n  this._emitQueue = []\n  this._processQueue = []\n  this.paused = false\n\n  if (this.noprocess)\n    return this\n\n  if (n === 0)\n    return done()\n\n  var sync = true\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false, done)\n  }\n  sync = false\n\n  function done () {\n    --self._processing\n    if (self._processing <= 0) {\n      if (sync) {\n        process.nextTick(function () {\n          self._finish()\n        })\n      } else {\n        self._finish()\n      }\n    }\n  }\n}\n\nGlob.prototype._finish = function () {\n  assert(this instanceof Glob)\n  if (this.aborted)\n    return\n\n  if (this.realpath && !this._didRealpath)\n    return this._realpath()\n\n  common.finish(this)\n  this.emit('end', this.found)\n}\n\nGlob.prototype._realpath = function () {\n  if (this._didRealpath)\n    return\n\n  this._didRealpath = true\n\n  var n = this.matches.length\n  if (n === 0)\n    return this._finish()\n\n  var self = this\n  for (var i = 0; i < this.matches.length; i++)\n    this._realpathSet(i, next)\n\n  function next () {\n    if (--n === 0)\n      self._finish()\n  }\n}\n\nGlob.prototype._realpathSet = function (index, cb) {\n  var matchset = this.matches[index]\n  if (!matchset)\n    return cb()\n\n  var found = Object.keys(matchset)\n  var self = this\n  var n = found.length\n\n  if (n === 0)\n    return cb()\n\n  var set = this.matches[index] = Object.create(null)\n  found.forEach(function (p, i) {\n    // If there's a problem with the stat, then it means that\n    // one or more of the links in the realpath couldn't be\n    // resolved.  just return the abs value in that case.\n    p = self._makeAbs(p)\n    rp.realpath(p, self.realpathCache, function (er, real) {\n      if (!er)\n        set[real] = true\n      else if (er.syscall === 'stat')\n        set[p] = true\n      else\n        self.emit('error', er) // srsly wtf right here\n\n      if (--n === 0) {\n        self.matches[index] = set\n        cb()\n      }\n    })\n  })\n}\n\nGlob.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlob.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n\nGlob.prototype.abort = function () {\n  this.aborted = true\n  this.emit('abort')\n}\n\nGlob.prototype.pause = function () {\n  if (!this.paused) {\n    this.paused = true\n    this.emit('pause')\n  }\n}\n\nGlob.prototype.resume = function () {\n  if (this.paused) {\n    this.emit('resume')\n    this.paused = false\n    if (this._emitQueue.length) {\n      var eq = this._emitQueue.slice(0)\n      this._emitQueue.length = 0\n      for (var i = 0; i < eq.length; i ++) {\n        var e = eq[i]\n        this._emitMatch(e[0], e[1])\n      }\n    }\n    if (this._processQueue.length) {\n      var pq = this._processQueue.slice(0)\n      this._processQueue.length = 0\n      for (var i = 0; i < pq.length; i ++) {\n        var p = pq[i]\n        this._processing--\n        this._process(p[0], p[1], p[2], p[3])\n      }\n    }\n  }\n}\n\nGlob.prototype._process = function (pattern, index, inGlobStar, cb) {\n  assert(this instanceof Glob)\n  assert(typeof cb === 'function')\n\n  if (this.aborted)\n    return\n\n  this._processing++\n  if (this.paused) {\n    this._processQueue.push([pattern, index, inGlobStar, cb])\n    return\n  }\n\n  //console.error('PROCESS %d', this._processing, pattern)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // see if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index, cb)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) ||\n      isAbsolute(pattern.map(function (p) {\n        return typeof p === 'string' ? p : '[*]'\n      }).join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip _processing\n  if (childrenIgnored(this, read))\n    return cb()\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar, cb)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar, cb)\n}\n\nGlob.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    return self._processReaddir2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\nGlob.prototype._processReaddir2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return cb()\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  //console.error('prd2', prefix, entries, remain[0]._glob, matchedEntries)\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return cb()\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return cb()\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix) {\n      if (prefix !== '/')\n        e = prefix + '/' + e\n      else\n        e = prefix + e\n    }\n    this._process([e].concat(remain), index, inGlobStar, cb)\n  }\n  cb()\n}\n\nGlob.prototype._emitMatch = function (index, e) {\n  if (this.aborted)\n    return\n\n  if (isIgnored(this, e))\n    return\n\n  if (this.paused) {\n    this._emitQueue.push([index, e])\n    return\n  }\n\n  var abs = isAbsolute(e) ? e : this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute)\n    e = abs\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  var st = this.statCache[abs]\n  if (st)\n    this.emit('stat', e, st)\n\n  this.emit('match', e)\n}\n\nGlob.prototype._readdirInGlobStar = function (abs, cb) {\n  if (this.aborted)\n    return\n\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false, cb)\n\n  var lstatkey = 'lstat\\0' + abs\n  var self = this\n  var lstatcb = inflight(lstatkey, lstatcb_)\n\n  if (lstatcb)\n    self.fs.lstat(abs, lstatcb)\n\n  function lstatcb_ (er, lstat) {\n    if (er && er.code === 'ENOENT')\n      return cb()\n\n    var isSym = lstat && lstat.isSymbolicLink()\n    self.symlinks[abs] = isSym\n\n    // If it's not a symlink or a dir, then it's definitely a regular file.\n    // don't bother doing a readdir in that case.\n    if (!isSym && lstat && !lstat.isDirectory()) {\n      self.cache[abs] = 'FILE'\n      cb()\n    } else\n      self._readdir(abs, false, cb)\n  }\n}\n\nGlob.prototype._readdir = function (abs, inGlobStar, cb) {\n  if (this.aborted)\n    return\n\n  cb = inflight('readdir\\0'+abs+'\\0'+inGlobStar, cb)\n  if (!cb)\n    return\n\n  //console.error('RD %j %j', +inGlobStar, abs)\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs, cb)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return cb()\n\n    if (Array.isArray(c))\n      return cb(null, c)\n  }\n\n  var self = this\n  self.fs.readdir(abs, readdirCb(this, abs, cb))\n}\n\nfunction readdirCb (self, abs, cb) {\n  return function (er, entries) {\n    if (er)\n      self._readdirError(abs, er, cb)\n    else\n      self._readdirEntries(abs, entries, cb)\n  }\n}\n\nGlob.prototype._readdirEntries = function (abs, entries, cb) {\n  if (this.aborted)\n    return\n\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n  return cb(null, entries)\n}\n\nGlob.prototype._readdirError = function (f, er, cb) {\n  if (this.aborted)\n    return\n\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        this.emit('error', error)\n        this.abort()\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict) {\n        this.emit('error', er)\n        // If the error is handled, then we abort\n        // if not, we threw out of here\n        this.abort()\n      }\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n\n  return cb()\n}\n\nGlob.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    self._processGlobStar2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\n\nGlob.prototype._processGlobStar2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n  //console.error('pgs2', prefix, remain[0], entries)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return cb()\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false, cb)\n\n  var isSym = this.symlinks[abs]\n  var len = entries.length\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return cb()\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true, cb)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true, cb)\n  }\n\n  cb()\n}\n\nGlob.prototype._processSimple = function (prefix, index, cb) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var self = this\n  this._stat(prefix, function (er, exists) {\n    self._processSimple2(prefix, index, er, exists, cb)\n  })\n}\nGlob.prototype._processSimple2 = function (prefix, index, er, exists, cb) {\n\n  //console.error('ps2', prefix, exists)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return cb()\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n  cb()\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlob.prototype._stat = function (f, cb) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return cb()\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return cb(null, c)\n\n    if (needDir && c === 'FILE')\n      return cb()\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (stat !== undefined) {\n    if (stat === false)\n      return cb(null, stat)\n    else {\n      var type = stat.isDirectory() ? 'DIR' : 'FILE'\n      if (needDir && type === 'FILE')\n        return cb()\n      else\n        return cb(null, type, stat)\n    }\n  }\n\n  var self = this\n  var statcb = inflight('stat\\0' + abs, lstatcb_)\n  if (statcb)\n    self.fs.lstat(abs, statcb)\n\n  function lstatcb_ (er, lstat) {\n    if (lstat && lstat.isSymbolicLink()) {\n      // If it's a symlink, then treat it as the target, unless\n      // the target does not exist, then treat it as a file.\n      return self.fs.stat(abs, function (er, stat) {\n        if (er)\n          self._stat2(f, abs, null, lstat, cb)\n        else\n          self._stat2(f, abs, er, stat, cb)\n      })\n    } else {\n      self._stat2(f, abs, er, lstat, cb)\n    }\n  }\n}\n\nGlob.prototype._stat2 = function (f, abs, er, stat, cb) {\n  if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n    this.statCache[abs] = false\n    return cb()\n  }\n\n  var needDir = f.slice(-1) === '/'\n  this.statCache[abs] = stat\n\n  if (abs.slice(-1) === '/' && stat && !stat.isDirectory())\n    return cb(null, false, stat)\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return cb()\n\n  return cb(null, c, stat)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}