{"ast":null,"code":"/**\n * @fileoverview A class of identifiers generator for code path segments.\n *\n * Each rule uses the identifier of code path segments to store additional\n * information of the code path.\n *\n * @author Toru Nagashima\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\n/**\n * A generator for unique ids.\n */\nclass IdGenerator {\n  // eslint-disable-next-line jsdoc/require-description\n  /**\n   * @param {string} prefix Optional. A prefix of generated ids.\n   */\n  constructor(prefix) {\n    this.prefix = String(prefix);\n    this.n = 0;\n  }\n\n  /**\n   * Generates id.\n   * @returns {string} A generated id.\n   */\n  next() {\n    this.n = 1 + this.n | 0;\n\n    /* istanbul ignore if */\n    if (this.n < 0) {\n      this.n = 1;\n    }\n    return this.prefix + this.n;\n  }\n}\nmodule.exports = IdGenerator;","map":{"version":3,"names":["IdGenerator","constructor","prefix","String","n","next","module","exports"],"sources":["D:/Project/YM~Cloud/cloud-front/node_modules/eslint/lib/linter/code-path-analysis/id-generator.js"],"sourcesContent":["/**\n * @fileoverview A class of identifiers generator for code path segments.\n *\n * Each rule uses the identifier of code path segments to store additional\n * information of the code path.\n *\n * @author Toru Nagashima\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\n/**\n * A generator for unique ids.\n */\nclass IdGenerator {\n\n    // eslint-disable-next-line jsdoc/require-description\n    /**\n     * @param {string} prefix Optional. A prefix of generated ids.\n     */\n    constructor(prefix) {\n        this.prefix = String(prefix);\n        this.n = 0;\n    }\n\n    /**\n     * Generates id.\n     * @returns {string} A generated id.\n     */\n    next() {\n        this.n = 1 + this.n | 0;\n\n        /* istanbul ignore if */\n        if (this.n < 0) {\n            this.n = 1;\n        }\n\n        return this.prefix + this.n;\n    }\n}\n\nmodule.exports = IdGenerator;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAMA,WAAW,CAAC;EAEd;EACA;AACJ;AACA;EACIC,WAAWA,CAACC,MAAM,EAAE;IAChB,IAAI,CAACA,MAAM,GAAGC,MAAM,CAACD,MAAM,CAAC;IAC5B,IAAI,CAACE,CAAC,GAAG,CAAC;EACd;;EAEA;AACJ;AACA;AACA;EACIC,IAAIA,CAAA,EAAG;IACH,IAAI,CAACD,CAAC,GAAG,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,CAAC;;IAEvB;IACA,IAAI,IAAI,CAACA,CAAC,GAAG,CAAC,EAAE;MACZ,IAAI,CAACA,CAAC,GAAG,CAAC;IACd;IAEA,OAAO,IAAI,CAACF,MAAM,GAAG,IAAI,CAACE,CAAC;EAC/B;AACJ;AAEAE,MAAM,CAACC,OAAO,GAAGP,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}