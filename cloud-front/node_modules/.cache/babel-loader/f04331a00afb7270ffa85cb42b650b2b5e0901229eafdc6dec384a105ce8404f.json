{"ast":null,"code":"/**\n * @fileoverview disallow using an async function as a Promise executor\n * @author Teddy Katz\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\nmodule.exports = {\n  meta: {\n    type: \"problem\",\n    docs: {\n      description: \"disallow using an async function as a Promise executor\",\n      category: \"Possible Errors\",\n      recommended: true,\n      url: \"https://eslint.org/docs/rules/no-async-promise-executor\"\n    },\n    fixable: null,\n    schema: [],\n    messages: {\n      async: \"Promise executor functions should not be async.\"\n    }\n  },\n  create(context) {\n    return {\n      \"NewExpression[callee.name='Promise'][arguments.0.async=true]\"(node) {\n        context.report({\n          node: context.getSourceCode().getFirstToken(node.arguments[0], token => token.value === \"async\"),\n          messageId: \"async\"\n        });\n      }\n    };\n  }\n};","map":{"version":3,"names":["module","exports","meta","type","docs","description","category","recommended","url","fixable","schema","messages","async","create","context","NewExpression[callee.name='Promise'][arguments.0.async=true]","node","report","getSourceCode","getFirstToken","arguments","token","value","messageId"],"sources":["D:/Project/YM~Cloud/cloud-front/node_modules/eslint/lib/rules/no-async-promise-executor.js"],"sourcesContent":["/**\n * @fileoverview disallow using an async function as a Promise executor\n * @author Teddy Katz\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        type: \"problem\",\n\n        docs: {\n            description: \"disallow using an async function as a Promise executor\",\n            category: \"Possible Errors\",\n            recommended: true,\n            url: \"https://eslint.org/docs/rules/no-async-promise-executor\"\n        },\n\n        fixable: null,\n        schema: [],\n        messages: {\n            async: \"Promise executor functions should not be async.\"\n        }\n    },\n\n    create(context) {\n        return {\n            \"NewExpression[callee.name='Promise'][arguments.0.async=true]\"(node) {\n                context.report({\n                    node: context.getSourceCode().getFirstToken(node.arguments[0], token => token.value === \"async\"),\n                    messageId: \"async\"\n                });\n            }\n        };\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAEZ;AACA;AACA;AAEAA,MAAM,CAACC,OAAO,GAAG;EACbC,IAAI,EAAE;IACFC,IAAI,EAAE,SAAS;IAEfC,IAAI,EAAE;MACFC,WAAW,EAAE,wDAAwD;MACrEC,QAAQ,EAAE,iBAAiB;MAC3BC,WAAW,EAAE,IAAI;MACjBC,GAAG,EAAE;IACT,CAAC;IAEDC,OAAO,EAAE,IAAI;IACbC,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE;MACNC,KAAK,EAAE;IACX;EACJ,CAAC;EAEDC,MAAMA,CAACC,OAAO,EAAE;IACZ,OAAO;MACH,8DAA8DC,CAACC,IAAI,EAAE;QACjEF,OAAO,CAACG,MAAM,CAAC;UACXD,IAAI,EAAEF,OAAO,CAACI,aAAa,CAAC,CAAC,CAACC,aAAa,CAACH,IAAI,CAACI,SAAS,CAAC,CAAC,CAAC,EAAEC,KAAK,IAAIA,KAAK,CAACC,KAAK,KAAK,OAAO,CAAC;UAChGC,SAAS,EAAE;QACf,CAAC,CAAC;MACN;IACJ,CAAC;EACL;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}