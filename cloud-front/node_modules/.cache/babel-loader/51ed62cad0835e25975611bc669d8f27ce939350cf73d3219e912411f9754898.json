{"ast":null,"code":"/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n */\n\"use strict\";\n\n/**\n * Check whether a given character is a combining mark or not.\n * @param {number} codePoint The character code to check.\n * @returns {boolean} `true` if the character belongs to the category, any of `Mc`, `Me`, and `Mn`.\n */\nmodule.exports = function isCombiningCharacter(codePoint) {\n  return /^[\\p{Mc}\\p{Me}\\p{Mn}]$/u.test(String.fromCodePoint(codePoint));\n};","map":{"version":3,"names":["module","exports","isCombiningCharacter","codePoint","test","String","fromCodePoint"],"sources":["D:/Project/YM~Cloud/cloud-front/node_modules/eslint/lib/rules/utils/unicode/is-combining-character.js"],"sourcesContent":["/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n */\n\"use strict\";\n\n/**\n * Check whether a given character is a combining mark or not.\n * @param {number} codePoint The character code to check.\n * @returns {boolean} `true` if the character belongs to the category, any of `Mc`, `Me`, and `Mn`.\n */\nmodule.exports = function isCombiningCharacter(codePoint) {\n    return /^[\\p{Mc}\\p{Me}\\p{Mn}]$/u.test(String.fromCodePoint(codePoint));\n};\n"],"mappings":"AAAA;AACA;AACA;AACA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,OAAO,GAAG,SAASC,oBAAoBA,CAACC,SAAS,EAAE;EACtD,OAAO,yBAAyB,CAACC,IAAI,CAACC,MAAM,CAACC,aAAa,CAACH,SAAS,CAAC,CAAC;AAC1E,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}