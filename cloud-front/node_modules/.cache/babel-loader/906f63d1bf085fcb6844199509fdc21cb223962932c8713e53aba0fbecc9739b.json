{"ast":null,"code":"/**\n * @fileoverview Rule to enforce a maximum number of nested callbacks.\n * @author Ian Christian Myers\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\nrequire(\"core-js/modules/es.array.push.js\");\nmodule.exports = {\n  meta: {\n    type: \"suggestion\",\n    docs: {\n      description: \"enforce a maximum depth that callbacks can be nested\",\n      category: \"Stylistic Issues\",\n      recommended: false,\n      url: \"https://eslint.org/docs/rules/max-nested-callbacks\"\n    },\n    schema: [{\n      oneOf: [{\n        type: \"integer\",\n        minimum: 0\n      }, {\n        type: \"object\",\n        properties: {\n          maximum: {\n            type: \"integer\",\n            minimum: 0\n          },\n          max: {\n            type: \"integer\",\n            minimum: 0\n          }\n        },\n        additionalProperties: false\n      }]\n    }],\n    messages: {\n      exceed: \"Too many nested callbacks ({{num}}). Maximum allowed is {{max}}.\"\n    }\n  },\n  create(context) {\n    //--------------------------------------------------------------------------\n    // Constants\n    //--------------------------------------------------------------------------\n    const option = context.options[0];\n    let THRESHOLD = 10;\n    if (typeof option === \"object\" && (Object.prototype.hasOwnProperty.call(option, \"maximum\") || Object.prototype.hasOwnProperty.call(option, \"max\"))) {\n      THRESHOLD = option.maximum || option.max;\n    } else if (typeof option === \"number\") {\n      THRESHOLD = option;\n    }\n\n    //--------------------------------------------------------------------------\n    // Helpers\n    //--------------------------------------------------------------------------\n\n    const callbackStack = [];\n\n    /**\n     * Checks a given function node for too many callbacks.\n     * @param {ASTNode} node The node to check.\n     * @returns {void}\n     * @private\n     */\n    function checkFunction(node) {\n      const parent = node.parent;\n      if (parent.type === \"CallExpression\") {\n        callbackStack.push(node);\n      }\n      if (callbackStack.length > THRESHOLD) {\n        const opts = {\n          num: callbackStack.length,\n          max: THRESHOLD\n        };\n        context.report({\n          node,\n          messageId: \"exceed\",\n          data: opts\n        });\n      }\n    }\n\n    /**\n     * Pops the call stack.\n     * @returns {void}\n     * @private\n     */\n    function popStack() {\n      callbackStack.pop();\n    }\n\n    //--------------------------------------------------------------------------\n    // Public API\n    //--------------------------------------------------------------------------\n\n    return {\n      ArrowFunctionExpression: checkFunction,\n      \"ArrowFunctionExpression:exit\": popStack,\n      FunctionExpression: checkFunction,\n      \"FunctionExpression:exit\": popStack\n    };\n  }\n};","map":{"version":3,"names":["require","module","exports","meta","type","docs","description","category","recommended","url","schema","oneOf","minimum","properties","maximum","max","additionalProperties","messages","exceed","create","context","option","options","THRESHOLD","Object","prototype","hasOwnProperty","call","callbackStack","checkFunction","node","parent","push","length","opts","num","report","messageId","data","popStack","pop","ArrowFunctionExpression","FunctionExpression"],"sources":["D:/Project/YM~Cloud/cloud-front/node_modules/eslint/lib/rules/max-nested-callbacks.js"],"sourcesContent":["/**\n * @fileoverview Rule to enforce a maximum number of nested callbacks.\n * @author Ian Christian Myers\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        type: \"suggestion\",\n\n        docs: {\n            description: \"enforce a maximum depth that callbacks can be nested\",\n            category: \"Stylistic Issues\",\n            recommended: false,\n            url: \"https://eslint.org/docs/rules/max-nested-callbacks\"\n        },\n\n        schema: [\n            {\n                oneOf: [\n                    {\n                        type: \"integer\",\n                        minimum: 0\n                    },\n                    {\n                        type: \"object\",\n                        properties: {\n                            maximum: {\n                                type: \"integer\",\n                                minimum: 0\n                            },\n                            max: {\n                                type: \"integer\",\n                                minimum: 0\n                            }\n                        },\n                        additionalProperties: false\n                    }\n                ]\n            }\n        ],\n        messages: {\n            exceed: \"Too many nested callbacks ({{num}}). Maximum allowed is {{max}}.\"\n        }\n    },\n\n    create(context) {\n\n        //--------------------------------------------------------------------------\n        // Constants\n        //--------------------------------------------------------------------------\n        const option = context.options[0];\n        let THRESHOLD = 10;\n\n        if (\n            typeof option === \"object\" &&\n            (Object.prototype.hasOwnProperty.call(option, \"maximum\") || Object.prototype.hasOwnProperty.call(option, \"max\"))\n        ) {\n            THRESHOLD = option.maximum || option.max;\n        } else if (typeof option === \"number\") {\n            THRESHOLD = option;\n        }\n\n        //--------------------------------------------------------------------------\n        // Helpers\n        //--------------------------------------------------------------------------\n\n        const callbackStack = [];\n\n        /**\n         * Checks a given function node for too many callbacks.\n         * @param {ASTNode} node The node to check.\n         * @returns {void}\n         * @private\n         */\n        function checkFunction(node) {\n            const parent = node.parent;\n\n            if (parent.type === \"CallExpression\") {\n                callbackStack.push(node);\n            }\n\n            if (callbackStack.length > THRESHOLD) {\n                const opts = { num: callbackStack.length, max: THRESHOLD };\n\n                context.report({ node, messageId: \"exceed\", data: opts });\n            }\n        }\n\n        /**\n         * Pops the call stack.\n         * @returns {void}\n         * @private\n         */\n        function popStack() {\n            callbackStack.pop();\n        }\n\n        //--------------------------------------------------------------------------\n        // Public API\n        //--------------------------------------------------------------------------\n\n        return {\n            ArrowFunctionExpression: checkFunction,\n            \"ArrowFunctionExpression:exit\": popStack,\n\n            FunctionExpression: checkFunction,\n            \"FunctionExpression:exit\": popStack\n        };\n\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AAAAA,OAAA;AAEAC,MAAM,CAACC,OAAO,GAAG;EACbC,IAAI,EAAE;IACFC,IAAI,EAAE,YAAY;IAElBC,IAAI,EAAE;MACFC,WAAW,EAAE,sDAAsD;MACnEC,QAAQ,EAAE,kBAAkB;MAC5BC,WAAW,EAAE,KAAK;MAClBC,GAAG,EAAE;IACT,CAAC;IAEDC,MAAM,EAAE,CACJ;MACIC,KAAK,EAAE,CACH;QACIP,IAAI,EAAE,SAAS;QACfQ,OAAO,EAAE;MACb,CAAC,EACD;QACIR,IAAI,EAAE,QAAQ;QACdS,UAAU,EAAE;UACRC,OAAO,EAAE;YACLV,IAAI,EAAE,SAAS;YACfQ,OAAO,EAAE;UACb,CAAC;UACDG,GAAG,EAAE;YACDX,IAAI,EAAE,SAAS;YACfQ,OAAO,EAAE;UACb;QACJ,CAAC;QACDI,oBAAoB,EAAE;MAC1B,CAAC;IAET,CAAC,CACJ;IACDC,QAAQ,EAAE;MACNC,MAAM,EAAE;IACZ;EACJ,CAAC;EAEDC,MAAMA,CAACC,OAAO,EAAE;IAEZ;IACA;IACA;IACA,MAAMC,MAAM,GAAGD,OAAO,CAACE,OAAO,CAAC,CAAC,CAAC;IACjC,IAAIC,SAAS,GAAG,EAAE;IAElB,IACI,OAAOF,MAAM,KAAK,QAAQ,KACzBG,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACN,MAAM,EAAE,SAAS,CAAC,IAAIG,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACN,MAAM,EAAE,KAAK,CAAC,CAAC,EAClH;MACEE,SAAS,GAAGF,MAAM,CAACP,OAAO,IAAIO,MAAM,CAACN,GAAG;IAC5C,CAAC,MAAM,IAAI,OAAOM,MAAM,KAAK,QAAQ,EAAE;MACnCE,SAAS,GAAGF,MAAM;IACtB;;IAEA;IACA;IACA;;IAEA,MAAMO,aAAa,GAAG,EAAE;;IAExB;AACR;AACA;AACA;AACA;AACA;IACQ,SAASC,aAAaA,CAACC,IAAI,EAAE;MACzB,MAAMC,MAAM,GAAGD,IAAI,CAACC,MAAM;MAE1B,IAAIA,MAAM,CAAC3B,IAAI,KAAK,gBAAgB,EAAE;QAClCwB,aAAa,CAACI,IAAI,CAACF,IAAI,CAAC;MAC5B;MAEA,IAAIF,aAAa,CAACK,MAAM,GAAGV,SAAS,EAAE;QAClC,MAAMW,IAAI,GAAG;UAAEC,GAAG,EAAEP,aAAa,CAACK,MAAM;UAAElB,GAAG,EAAEQ;QAAU,CAAC;QAE1DH,OAAO,CAACgB,MAAM,CAAC;UAAEN,IAAI;UAAEO,SAAS,EAAE,QAAQ;UAAEC,IAAI,EAAEJ;QAAK,CAAC,CAAC;MAC7D;IACJ;;IAEA;AACR;AACA;AACA;AACA;IACQ,SAASK,QAAQA,CAAA,EAAG;MAChBX,aAAa,CAACY,GAAG,CAAC,CAAC;IACvB;;IAEA;IACA;IACA;;IAEA,OAAO;MACHC,uBAAuB,EAAEZ,aAAa;MACtC,8BAA8B,EAAEU,QAAQ;MAExCG,kBAAkB,EAAEb,aAAa;MACjC,yBAAyB,EAAEU;IAC/B,CAAC;EAEL;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}