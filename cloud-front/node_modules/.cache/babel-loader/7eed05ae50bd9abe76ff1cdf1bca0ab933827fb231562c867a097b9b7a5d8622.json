{"ast":null,"code":"/**\n * @fileoverview Rule to enforce a particular function style\n * @author Nicholas C. Zakas\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\nrequire(\"core-js/modules/es.array.push.js\");\nmodule.exports = {\n  meta: {\n    type: \"suggestion\",\n    docs: {\n      description: \"enforce the consistent use of either `function` declarations or expressions\",\n      category: \"Stylistic Issues\",\n      recommended: false,\n      url: \"https://eslint.org/docs/rules/func-style\"\n    },\n    schema: [{\n      enum: [\"declaration\", \"expression\"]\n    }, {\n      type: \"object\",\n      properties: {\n        allowArrowFunctions: {\n          type: \"boolean\",\n          default: false\n        }\n      },\n      additionalProperties: false\n    }],\n    messages: {\n      expression: \"Expected a function expression.\",\n      declaration: \"Expected a function declaration.\"\n    }\n  },\n  create(context) {\n    const style = context.options[0],\n      allowArrowFunctions = context.options[1] && context.options[1].allowArrowFunctions,\n      enforceDeclarations = style === \"declaration\",\n      stack = [];\n    const nodesToCheck = {\n      FunctionDeclaration(node) {\n        stack.push(false);\n        if (!enforceDeclarations && node.parent.type !== \"ExportDefaultDeclaration\") {\n          context.report({\n            node,\n            messageId: \"expression\"\n          });\n        }\n      },\n      \"FunctionDeclaration:exit\"() {\n        stack.pop();\n      },\n      FunctionExpression(node) {\n        stack.push(false);\n        if (enforceDeclarations && node.parent.type === \"VariableDeclarator\") {\n          context.report({\n            node: node.parent,\n            messageId: \"declaration\"\n          });\n        }\n      },\n      \"FunctionExpression:exit\"() {\n        stack.pop();\n      },\n      ThisExpression() {\n        if (stack.length > 0) {\n          stack[stack.length - 1] = true;\n        }\n      }\n    };\n    if (!allowArrowFunctions) {\n      nodesToCheck.ArrowFunctionExpression = function () {\n        stack.push(false);\n      };\n      nodesToCheck[\"ArrowFunctionExpression:exit\"] = function (node) {\n        const hasThisExpr = stack.pop();\n        if (enforceDeclarations && !hasThisExpr && node.parent.type === \"VariableDeclarator\") {\n          context.report({\n            node: node.parent,\n            messageId: \"declaration\"\n          });\n        }\n      };\n    }\n    return nodesToCheck;\n  }\n};","map":{"version":3,"names":["require","module","exports","meta","type","docs","description","category","recommended","url","schema","enum","properties","allowArrowFunctions","default","additionalProperties","messages","expression","declaration","create","context","style","options","enforceDeclarations","stack","nodesToCheck","FunctionDeclaration","node","push","parent","report","messageId","FunctionDeclaration:exit","pop","FunctionExpression","FunctionExpression:exit","ThisExpression","length","ArrowFunctionExpression","hasThisExpr"],"sources":["D:/Project/YM~Cloud/cloud-front/node_modules/eslint/lib/rules/func-style.js"],"sourcesContent":["/**\n * @fileoverview Rule to enforce a particular function style\n * @author Nicholas C. Zakas\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        type: \"suggestion\",\n\n        docs: {\n            description: \"enforce the consistent use of either `function` declarations or expressions\",\n            category: \"Stylistic Issues\",\n            recommended: false,\n            url: \"https://eslint.org/docs/rules/func-style\"\n        },\n\n        schema: [\n            {\n                enum: [\"declaration\", \"expression\"]\n            },\n            {\n                type: \"object\",\n                properties: {\n                    allowArrowFunctions: {\n                        type: \"boolean\",\n                        default: false\n                    }\n                },\n                additionalProperties: false\n            }\n        ],\n\n        messages: {\n            expression: \"Expected a function expression.\",\n            declaration: \"Expected a function declaration.\"\n        }\n    },\n\n    create(context) {\n\n        const style = context.options[0],\n            allowArrowFunctions = context.options[1] && context.options[1].allowArrowFunctions,\n            enforceDeclarations = (style === \"declaration\"),\n            stack = [];\n\n        const nodesToCheck = {\n            FunctionDeclaration(node) {\n                stack.push(false);\n\n                if (!enforceDeclarations && node.parent.type !== \"ExportDefaultDeclaration\") {\n                    context.report({ node, messageId: \"expression\" });\n                }\n            },\n            \"FunctionDeclaration:exit\"() {\n                stack.pop();\n            },\n\n            FunctionExpression(node) {\n                stack.push(false);\n\n                if (enforceDeclarations && node.parent.type === \"VariableDeclarator\") {\n                    context.report({ node: node.parent, messageId: \"declaration\" });\n                }\n            },\n            \"FunctionExpression:exit\"() {\n                stack.pop();\n            },\n\n            ThisExpression() {\n                if (stack.length > 0) {\n                    stack[stack.length - 1] = true;\n                }\n            }\n        };\n\n        if (!allowArrowFunctions) {\n            nodesToCheck.ArrowFunctionExpression = function() {\n                stack.push(false);\n            };\n\n            nodesToCheck[\"ArrowFunctionExpression:exit\"] = function(node) {\n                const hasThisExpr = stack.pop();\n\n                if (enforceDeclarations && !hasThisExpr && node.parent.type === \"VariableDeclarator\") {\n                    context.report({ node: node.parent, messageId: \"declaration\" });\n                }\n            };\n        }\n\n        return nodesToCheck;\n\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAEZ;AACA;AACA;AAAAA,OAAA;AAEAC,MAAM,CAACC,OAAO,GAAG;EACbC,IAAI,EAAE;IACFC,IAAI,EAAE,YAAY;IAElBC,IAAI,EAAE;MACFC,WAAW,EAAE,6EAA6E;MAC1FC,QAAQ,EAAE,kBAAkB;MAC5BC,WAAW,EAAE,KAAK;MAClBC,GAAG,EAAE;IACT,CAAC;IAEDC,MAAM,EAAE,CACJ;MACIC,IAAI,EAAE,CAAC,aAAa,EAAE,YAAY;IACtC,CAAC,EACD;MACIP,IAAI,EAAE,QAAQ;MACdQ,UAAU,EAAE;QACRC,mBAAmB,EAAE;UACjBT,IAAI,EAAE,SAAS;UACfU,OAAO,EAAE;QACb;MACJ,CAAC;MACDC,oBAAoB,EAAE;IAC1B,CAAC,CACJ;IAEDC,QAAQ,EAAE;MACNC,UAAU,EAAE,iCAAiC;MAC7CC,WAAW,EAAE;IACjB;EACJ,CAAC;EAEDC,MAAMA,CAACC,OAAO,EAAE;IAEZ,MAAMC,KAAK,GAAGD,OAAO,CAACE,OAAO,CAAC,CAAC,CAAC;MAC5BT,mBAAmB,GAAGO,OAAO,CAACE,OAAO,CAAC,CAAC,CAAC,IAAIF,OAAO,CAACE,OAAO,CAAC,CAAC,CAAC,CAACT,mBAAmB;MAClFU,mBAAmB,GAAIF,KAAK,KAAK,aAAc;MAC/CG,KAAK,GAAG,EAAE;IAEd,MAAMC,YAAY,GAAG;MACjBC,mBAAmBA,CAACC,IAAI,EAAE;QACtBH,KAAK,CAACI,IAAI,CAAC,KAAK,CAAC;QAEjB,IAAI,CAACL,mBAAmB,IAAII,IAAI,CAACE,MAAM,CAACzB,IAAI,KAAK,0BAA0B,EAAE;UACzEgB,OAAO,CAACU,MAAM,CAAC;YAAEH,IAAI;YAAEI,SAAS,EAAE;UAAa,CAAC,CAAC;QACrD;MACJ,CAAC;MACD,0BAA0BC,CAAA,EAAG;QACzBR,KAAK,CAACS,GAAG,CAAC,CAAC;MACf,CAAC;MAEDC,kBAAkBA,CAACP,IAAI,EAAE;QACrBH,KAAK,CAACI,IAAI,CAAC,KAAK,CAAC;QAEjB,IAAIL,mBAAmB,IAAII,IAAI,CAACE,MAAM,CAACzB,IAAI,KAAK,oBAAoB,EAAE;UAClEgB,OAAO,CAACU,MAAM,CAAC;YAAEH,IAAI,EAAEA,IAAI,CAACE,MAAM;YAAEE,SAAS,EAAE;UAAc,CAAC,CAAC;QACnE;MACJ,CAAC;MACD,yBAAyBI,CAAA,EAAG;QACxBX,KAAK,CAACS,GAAG,CAAC,CAAC;MACf,CAAC;MAEDG,cAAcA,CAAA,EAAG;QACb,IAAIZ,KAAK,CAACa,MAAM,GAAG,CAAC,EAAE;UAClBb,KAAK,CAACA,KAAK,CAACa,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI;QAClC;MACJ;IACJ,CAAC;IAED,IAAI,CAACxB,mBAAmB,EAAE;MACtBY,YAAY,CAACa,uBAAuB,GAAG,YAAW;QAC9Cd,KAAK,CAACI,IAAI,CAAC,KAAK,CAAC;MACrB,CAAC;MAEDH,YAAY,CAAC,8BAA8B,CAAC,GAAG,UAASE,IAAI,EAAE;QAC1D,MAAMY,WAAW,GAAGf,KAAK,CAACS,GAAG,CAAC,CAAC;QAE/B,IAAIV,mBAAmB,IAAI,CAACgB,WAAW,IAAIZ,IAAI,CAACE,MAAM,CAACzB,IAAI,KAAK,oBAAoB,EAAE;UAClFgB,OAAO,CAACU,MAAM,CAAC;YAAEH,IAAI,EAAEA,IAAI,CAACE,MAAM;YAAEE,SAAS,EAAE;UAAc,CAAC,CAAC;QACnE;MACJ,CAAC;IACL;IAEA,OAAON,YAAY;EAEvB;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}