{"ast":null,"code":"// Generated by LiveScript 1.6.0\n(function () {\n  var ref$,\n    any,\n    all,\n    isItNaN,\n    types,\n    defaultType,\n    toString$ = {}.toString;\n  ref$ = require('prelude-ls'), any = ref$.any, all = ref$.all, isItNaN = ref$.isItNaN;\n  types = {\n    Number: {\n      typeOf: 'Number',\n      validate: function (it) {\n        return !isItNaN(it);\n      }\n    },\n    NaN: {\n      typeOf: 'Number',\n      validate: isItNaN\n    },\n    Int: {\n      typeOf: 'Number',\n      validate: function (it) {\n        return !isItNaN(it) && it % 1 === 0;\n      }\n    },\n    Float: {\n      typeOf: 'Number',\n      validate: function (it) {\n        return !isItNaN(it);\n      }\n    },\n    Date: {\n      typeOf: 'Date',\n      validate: function (it) {\n        return !isItNaN(it.getTime());\n      }\n    }\n  };\n  defaultType = {\n    array: 'Array',\n    tuple: 'Array'\n  };\n  function checkArray(input, type, options) {\n    return all(function (it) {\n      return checkMultiple(it, type.of, options);\n    }, input);\n  }\n  function checkTuple(input, type, options) {\n    var i, i$, ref$, len$, types;\n    i = 0;\n    for (i$ = 0, len$ = (ref$ = type.of).length; i$ < len$; ++i$) {\n      types = ref$[i$];\n      if (!checkMultiple(input[i], types, options)) {\n        return false;\n      }\n      i++;\n    }\n    return input.length <= i;\n  }\n  function checkFields(input, type, options) {\n    var inputKeys, numInputKeys, k, numOfKeys, key, ref$, types;\n    inputKeys = {};\n    numInputKeys = 0;\n    for (k in input) {\n      inputKeys[k] = true;\n      numInputKeys++;\n    }\n    numOfKeys = 0;\n    for (key in ref$ = type.of) {\n      types = ref$[key];\n      if (!checkMultiple(input[key], types, options)) {\n        return false;\n      }\n      if (inputKeys[key]) {\n        numOfKeys++;\n      }\n    }\n    return type.subset || numInputKeys === numOfKeys;\n  }\n  function checkStructure(input, type, options) {\n    if (!(input instanceof Object)) {\n      return false;\n    }\n    switch (type.structure) {\n      case 'fields':\n        return checkFields(input, type, options);\n      case 'array':\n        return checkArray(input, type, options);\n      case 'tuple':\n        return checkTuple(input, type, options);\n    }\n  }\n  function check(input, typeObj, options) {\n    var type, structure, setting, that;\n    type = typeObj.type, structure = typeObj.structure;\n    if (type) {\n      if (type === '*') {\n        return true;\n      }\n      setting = options.customTypes[type] || types[type];\n      if (setting) {\n        return (setting.typeOf === void 8 || setting.typeOf === toString$.call(input).slice(8, -1)) && setting.validate(input);\n      } else {\n        return type === toString$.call(input).slice(8, -1) && (!structure || checkStructure(input, typeObj, options));\n      }\n    } else if (structure) {\n      if (that = defaultType[structure]) {\n        if (that !== toString$.call(input).slice(8, -1)) {\n          return false;\n        }\n      }\n      return checkStructure(input, typeObj, options);\n    } else {\n      throw new Error(\"No type defined. Input: \" + input + \".\");\n    }\n  }\n  function checkMultiple(input, types, options) {\n    if (toString$.call(types).slice(8, -1) !== 'Array') {\n      throw new Error(\"Types must be in an array. Input: \" + input + \".\");\n    }\n    return any(function (it) {\n      return check(input, it, options);\n    }, types);\n  }\n  module.exports = function (parsedType, input, options) {\n    options == null && (options = {});\n    if (options.customTypes == null) {\n      options.customTypes = {};\n    }\n    return checkMultiple(input, parsedType, options);\n  };\n}).call(this);","map":{"version":3,"names":["ref$","any","all","isItNaN","types","defaultType","toString$","toString","require","Number","typeOf","validate","it","NaN","Int","Float","Date","getTime","array","tuple","checkArray","input","type","options","checkMultiple","of","checkTuple","i","i$","len$","length","checkFields","inputKeys","numInputKeys","k","numOfKeys","key","subset","checkStructure","Object","structure","check","typeObj","setting","that","customTypes","call","slice","Error","module","exports","parsedType"],"sources":["D:/Project/YM~Cloud/cloud-front/node_modules/type-check/lib/check.js"],"sourcesContent":["// Generated by LiveScript 1.6.0\n(function(){\n  var ref$, any, all, isItNaN, types, defaultType, toString$ = {}.toString;\n  ref$ = require('prelude-ls'), any = ref$.any, all = ref$.all, isItNaN = ref$.isItNaN;\n  types = {\n    Number: {\n      typeOf: 'Number',\n      validate: function(it){\n        return !isItNaN(it);\n      }\n    },\n    NaN: {\n      typeOf: 'Number',\n      validate: isItNaN\n    },\n    Int: {\n      typeOf: 'Number',\n      validate: function(it){\n        return !isItNaN(it) && it % 1 === 0;\n      }\n    },\n    Float: {\n      typeOf: 'Number',\n      validate: function(it){\n        return !isItNaN(it);\n      }\n    },\n    Date: {\n      typeOf: 'Date',\n      validate: function(it){\n        return !isItNaN(it.getTime());\n      }\n    }\n  };\n  defaultType = {\n    array: 'Array',\n    tuple: 'Array'\n  };\n  function checkArray(input, type, options){\n    return all(function(it){\n      return checkMultiple(it, type.of, options);\n    }, input);\n  }\n  function checkTuple(input, type, options){\n    var i, i$, ref$, len$, types;\n    i = 0;\n    for (i$ = 0, len$ = (ref$ = type.of).length; i$ < len$; ++i$) {\n      types = ref$[i$];\n      if (!checkMultiple(input[i], types, options)) {\n        return false;\n      }\n      i++;\n    }\n    return input.length <= i;\n  }\n  function checkFields(input, type, options){\n    var inputKeys, numInputKeys, k, numOfKeys, key, ref$, types;\n    inputKeys = {};\n    numInputKeys = 0;\n    for (k in input) {\n      inputKeys[k] = true;\n      numInputKeys++;\n    }\n    numOfKeys = 0;\n    for (key in ref$ = type.of) {\n      types = ref$[key];\n      if (!checkMultiple(input[key], types, options)) {\n        return false;\n      }\n      if (inputKeys[key]) {\n        numOfKeys++;\n      }\n    }\n    return type.subset || numInputKeys === numOfKeys;\n  }\n  function checkStructure(input, type, options){\n    if (!(input instanceof Object)) {\n      return false;\n    }\n    switch (type.structure) {\n    case 'fields':\n      return checkFields(input, type, options);\n    case 'array':\n      return checkArray(input, type, options);\n    case 'tuple':\n      return checkTuple(input, type, options);\n    }\n  }\n  function check(input, typeObj, options){\n    var type, structure, setting, that;\n    type = typeObj.type, structure = typeObj.structure;\n    if (type) {\n      if (type === '*') {\n        return true;\n      }\n      setting = options.customTypes[type] || types[type];\n      if (setting) {\n        return (setting.typeOf === void 8 || setting.typeOf === toString$.call(input).slice(8, -1)) && setting.validate(input);\n      } else {\n        return type === toString$.call(input).slice(8, -1) && (!structure || checkStructure(input, typeObj, options));\n      }\n    } else if (structure) {\n      if (that = defaultType[structure]) {\n        if (that !== toString$.call(input).slice(8, -1)) {\n          return false;\n        }\n      }\n      return checkStructure(input, typeObj, options);\n    } else {\n      throw new Error(\"No type defined. Input: \" + input + \".\");\n    }\n  }\n  function checkMultiple(input, types, options){\n    if (toString$.call(types).slice(8, -1) !== 'Array') {\n      throw new Error(\"Types must be in an array. Input: \" + input + \".\");\n    }\n    return any(function(it){\n      return check(input, it, options);\n    }, types);\n  }\n  module.exports = function(parsedType, input, options){\n    options == null && (options = {});\n    if (options.customTypes == null) {\n      options.customTypes = {};\n    }\n    return checkMultiple(input, parsedType, options);\n  };\n}).call(this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}