{"ast":null,"code":"'use strict';\n\n/*eslint-disable max-len,no-use-before-define*/\nrequire(\"core-js/modules/es.array.push.js\");\nvar common = require('./common');\nvar YAMLException = require('./exception');\nvar Mark = require('./mark');\nvar DEFAULT_SAFE_SCHEMA = require('./schema/default_safe');\nvar DEFAULT_FULL_SCHEMA = require('./schema/default_full');\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nvar CONTEXT_FLOW_IN = 1;\nvar CONTEXT_FLOW_OUT = 2;\nvar CONTEXT_BLOCK_IN = 3;\nvar CONTEXT_BLOCK_OUT = 4;\nvar CHOMPING_CLIP = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP = 3;\nvar PATTERN_NON_PRINTABLE = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\nfunction _class(obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction is_EOL(c) {\n  return c === 0x0A /* LF */ || c === 0x0D /* CR */;\n}\n\nfunction is_WHITE_SPACE(c) {\n  return c === 0x09 /* Tab */ || c === 0x20 /* Space */;\n}\n\nfunction is_WS_OR_EOL(c) {\n  return c === 0x09 /* Tab */ || c === 0x20 /* Space */ || c === 0x0A /* LF */ || c === 0x0D /* CR */;\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C /* , */ || c === 0x5B /* [ */ || c === 0x5D /* ] */ || c === 0x7B /* { */ || c === 0x7D /* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n  if (0x30 /* 0 */ <= c && c <= 0x39 /* 9 */) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n  if (0x61 /* a */ <= lc && lc <= 0x66 /* f */) {\n    return lc - 0x61 + 10;\n  }\n  return -1;\n}\nfunction escapedHexLen(c) {\n  if (c === 0x78 /* x */) {\n    return 2;\n  }\n  if (c === 0x75 /* u */) {\n    return 4;\n  }\n  if (c === 0x55 /* U */) {\n    return 8;\n  }\n  return 0;\n}\nfunction fromDecimalCode(c) {\n  if (0x30 /* 0 */ <= c && c <= 0x39 /* 9 */) {\n    return c - 0x30;\n  }\n  return -1;\n}\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return c === 0x30 /* 0 */ ? '\\x00' : c === 0x61 /* a */ ? '\\x07' : c === 0x62 /* b */ ? '\\x08' : c === 0x74 /* t */ ? '\\x09' : c === 0x09 /* Tab */ ? '\\x09' : c === 0x6E /* n */ ? '\\x0A' : c === 0x76 /* v */ ? '\\x0B' : c === 0x66 /* f */ ? '\\x0C' : c === 0x72 /* r */ ? '\\x0D' : c === 0x65 /* e */ ? '\\x1B' : c === 0x20 /* Space */ ? ' ' : c === 0x22 /* \" */ ? '\\x22' : c === 0x2F /* / */ ? '/' : c === 0x5C /* \\ */ ? '\\x5C' : c === 0x4E /* N */ ? '\\x85' : c === 0x5F /* _ */ ? '\\xA0' : c === 0x4C /* L */ ? '\\u2028' : c === 0x50 /* P */ ? '\\u2029' : '';\n}\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode((c - 0x010000 >> 10) + 0xD800, (c - 0x010000 & 0x03FF) + 0xDC00);\n}\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\nfunction State(input, options) {\n  this.input = input;\n  this.filename = options['filename'] || null;\n  this.schema = options['schema'] || DEFAULT_FULL_SCHEMA;\n  this.onWarning = options['onWarning'] || null;\n  this.legacy = options['legacy'] || false;\n  this.json = options['json'] || false;\n  this.listener = options['listener'] || null;\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap = this.schema.compiledTypeMap;\n  this.length = input.length;\n  this.position = 0;\n  this.line = 0;\n  this.lineStart = 0;\n  this.lineIndent = 0;\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n}\n\nfunction generateError(state, message) {\n  return new YAMLException(message, new Mark(state.filename, state.input, state.position, state.line, state.position - state.lineStart));\n}\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\nvar directiveHandlers = {\n  YAML: function handleYamlDirective(state, name, args) {\n    var match, major, minor;\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n    state.version = args[0];\n    state.checkLineBreaks = minor < 2;\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n  TAG: function handleTagDirective(state, name, args) {\n    var handle, prefix;\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n    handle = args[0];\n    prefix = args[1];\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n    if (_hasOwnProperty.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n    state.tagMap[handle] = prefix;\n  }\n};\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n  if (start < end) {\n    _result = state.input.slice(start, end);\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 || 0x20 <= _character && _character <= 0x10FFFF)) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n    state.result += _result;\n  }\n}\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n  sourceKeys = Object.keys(source);\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n    if (!_hasOwnProperty.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, startLine, startPos) {\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n  keyNode = String(keyNode);\n  if (_result === null) {\n    _result = {};\n  }\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json && !_hasOwnProperty.call(overridableKeys, keyNode) && _hasOwnProperty.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n    _result[keyNode] = valueNode;\n    delete overridableKeys[keyNode];\n  }\n  return _result;\n}\nfunction readLineBreak(state) {\n  var ch;\n  ch = state.input.charCodeAt(state.position);\n  if (ch === 0x0A /* LF */) {\n    state.position++;\n  } else if (ch === 0x0D /* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A /* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n  state.line += 1;\n  state.lineStart = state.position;\n}\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n    ch = state.input.charCodeAt(state.position);\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n    if (allowComments && ch === 0x23 /* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A /* LF */ && ch !== 0x0D /* CR */ && ch !== 0);\n    }\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n      while (ch === 0x20 /* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n  return lineBreaks;\n}\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n    ch;\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D /* - */ || ch === 0x2E /* . */) && ch === state.input.charCodeAt(_position + 1) && ch === state.input.charCodeAt(_position + 2)) {\n    _position += 3;\n    ch = state.input.charCodeAt(_position);\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n    following,\n    captureStart,\n    captureEnd,\n    hasPendingContent,\n    _line,\n    _lineStart,\n    _lineIndent,\n    _kind = state.kind,\n    _result = state.result,\n    ch;\n  ch = state.input.charCodeAt(state.position);\n  if (is_WS_OR_EOL(ch) || is_FLOW_INDICATOR(ch) || ch === 0x23 /* # */ || ch === 0x26 /* & */ || ch === 0x2A /* * */ || ch === 0x21 /* ! */ || ch === 0x7C /* | */ || ch === 0x3E /* > */ || ch === 0x27 /* ' */ || ch === 0x22 /* \" */ || ch === 0x25 /* % */ || ch === 0x40 /* @ */ || ch === 0x60 /* ` */) {\n    return false;\n  }\n  if (ch === 0x3F /* ? */ || ch === 0x2D /* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n    if (is_WS_OR_EOL(following) || withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n  while (ch !== 0) {\n    if (ch === 0x3A /* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n      if (is_WS_OR_EOL(following) || withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n    } else if (ch === 0x23 /* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n    } else if (state.position === state.lineStart && testDocumentSeparator(state) || withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n    ch = state.input.charCodeAt(++state.position);\n  }\n  captureSegment(state, captureStart, captureEnd, false);\n  if (state.result) {\n    return true;\n  }\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch, captureStart, captureEnd;\n  ch = state.input.charCodeAt(state.position);\n  if (ch !== 0x27 /* ' */) {\n    return false;\n  }\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27 /* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n      if (ch === 0x27 /* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart, captureEnd, hexLength, hexResult, tmp, ch;\n  ch = state.input.charCodeAt(state.position);\n  if (ch !== 0x22 /* \" */) {\n    return false;\n  }\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22 /* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n    } else if (ch === 0x5C /* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n        state.result += charFromCodepoint(hexResult);\n        state.position++;\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n      captureStart = captureEnd = state.position;\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n    _line,\n    _tag = state.tag,\n    _result,\n    _anchor = state.anchor,\n    following,\n    terminator,\n    isPair,\n    isExplicitPair,\n    isMapping,\n    overridableKeys = {},\n    keyNode,\n    keyTag,\n    valueNode,\n    ch;\n  ch = state.input.charCodeAt(state.position);\n  if (ch === 0x5B /* [ */) {\n    terminator = 0x5D; /* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B /* { */) {\n    terminator = 0x7D; /* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n  ch = state.input.charCodeAt(++state.position);\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n    ch = state.input.charCodeAt(state.position);\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    }\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n    if (ch === 0x3F /* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n    ch = state.input.charCodeAt(state.position);\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A /* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode));\n    } else {\n      _result.push(keyNode);\n    }\n    skipSeparationSpace(state, true, nodeIndent);\n    ch = state.input.charCodeAt(state.position);\n    if (ch === 0x2C /* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n    folding,\n    chomping = CHOMPING_CLIP,\n    didReadContent = false,\n    detectedIndent = false,\n    textIndent = nodeIndent,\n    emptyLines = 0,\n    atMoreIndented = false,\n    tmp,\n    ch;\n  ch = state.input.charCodeAt(state.position);\n  if (ch === 0x7C /* | */) {\n    folding = false;\n  } else if (ch === 0x3E /* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n  state.kind = 'scalar';\n  state.result = '';\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n    if (ch === 0x2B /* + */ || ch === 0x2D /* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = ch === 0x2B /* + */ ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n    } else {\n      break;\n    }\n  }\n  if (is_WHITE_SPACE(ch)) {\n    do {\n      ch = state.input.charCodeAt(++state.position);\n    } while (is_WHITE_SPACE(ch));\n    if (ch === 0x23 /* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (!is_EOL(ch) && ch !== 0);\n    }\n  }\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n    ch = state.input.charCodeAt(state.position);\n    while ((!detectedIndent || state.lineIndent < textIndent) && ch === 0x20 /* Space */) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) {\n          // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n        // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n        // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) {\n          // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n        // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n      // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n    while (!is_EOL(ch) && ch !== 0) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n    captureSegment(state, captureStart, state.position, false);\n  }\n  return true;\n}\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n    _tag = state.tag,\n    _anchor = state.anchor,\n    _result = [],\n    following,\n    detected = false,\n    ch;\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n  ch = state.input.charCodeAt(state.position);\n  while (ch !== 0) {\n    if (ch !== 0x2D /* - */) {\n      break;\n    }\n    following = state.input.charCodeAt(state.position + 1);\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n    detected = true;\n    state.position++;\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n    ch = state.input.charCodeAt(state.position);\n    if ((state.line === _line || state.lineIndent > nodeIndent) && ch !== 0) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n    allowCompact,\n    _line,\n    _pos,\n    _tag = state.tag,\n    _anchor = state.anchor,\n    _result = {},\n    overridableKeys = {},\n    keyTag = null,\n    keyNode = null,\n    valueNode = null,\n    atExplicitKey = false,\n    detected = false,\n    ch;\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n  ch = state.input.charCodeAt(state.position);\n  while (ch !== 0) {\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n    _pos = state.position;\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F /* ? */ || ch === 0x3A /* : */) && is_WS_OR_EOL(following)) {\n      if (ch === 0x3F /* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n          keyTag = keyNode = valueNode = null;\n        }\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n      state.position += 1;\n      ch = following;\n\n      //\n      // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n      //\n    } else if (composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n        if (ch === 0x3A /* : */) {\n          ch = state.input.charCodeAt(++state.position);\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n            keyTag = keyNode = valueNode = null;\n          }\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n    } else {\n      break; // Reading is done. Go to the epilogue.\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _pos);\n        keyTag = keyNode = valueNode = null;\n      }\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n    if (state.lineIndent > nodeIndent && ch !== 0) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n  return detected;\n}\nfunction readTagProperty(state) {\n  var _position,\n    isVerbatim = false,\n    isNamed = false,\n    tagHandle,\n    tagName,\n    ch;\n  ch = state.input.charCodeAt(state.position);\n  if (ch !== 0x21 /* ! */) return false;\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n  ch = state.input.charCodeAt(++state.position);\n  if (ch === 0x3C /* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n  } else if (ch === 0x21 /* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n  } else {\n    tagHandle = '!';\n  }\n  _position = state.position;\n  if (isVerbatim) {\n    do {\n      ch = state.input.charCodeAt(++state.position);\n    } while (ch !== 0 && ch !== 0x3E /* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      if (ch === 0x21 /* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n      ch = state.input.charCodeAt(++state.position);\n    }\n    tagName = state.input.slice(_position, state.position);\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n  if (isVerbatim) {\n    state.tag = tagName;\n  } else if (_hasOwnProperty.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n  return true;\n}\nfunction readAnchorProperty(state) {\n  var _position, ch;\n  ch = state.input.charCodeAt(state.position);\n  if (ch !== 0x26 /* & */) return false;\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\nfunction readAlias(state) {\n  var _position, alias, ch;\n  ch = state.input.charCodeAt(state.position);\n  if (ch !== 0x2A /* * */) return false;\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n  alias = state.input.slice(_position, state.position);\n  if (!_hasOwnProperty.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n    allowBlockScalars,\n    allowBlockCollections,\n    indentStatus = 1,\n    // 1: this>parent, 0: this=parent, -1: this<parent\n    atNewLine = false,\n    hasContent = false,\n    typeIndex,\n    typeQuantity,\n    type,\n    flowIndent,\n    blockIndent;\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n  state.tag = null;\n  state.anchor = null;\n  state.kind = null;\n  state.result = null;\n  allowBlockStyles = allowBlockScalars = allowBlockCollections = CONTEXT_BLOCK_OUT === nodeContext || CONTEXT_BLOCK_IN === nodeContext;\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n    blockIndent = state.position - state.lineStart;\n    if (indentStatus === 1) {\n      if (allowBlockCollections && (readBlockSequence(state, blockIndent) || readBlockMapping(state, blockIndent, flowIndent)) || readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if (allowBlockScalars && readBlockScalar(state, flowIndent) || readSingleQuotedScalar(state, flowIndent) || readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n        } else if (readAlias(state)) {\n          hasContent = true;\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n  if (state.tag !== null && state.tag !== '!') {\n    if (state.tag === '?') {\n      // Implicit resolving is not allowed for non-scalar types, and '?'\n      // non-specific tag is only automatically assigned to plain scalars.\n      //\n      // We only need to check kind conformity in case user explicitly assigns '?'\n      // tag, for example like this: \"!<?> [0]\"\n      //\n      if (state.result !== null && state.kind !== 'scalar') {\n        throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n      }\n      for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n        type = state.implicitTypes[typeIndex];\n        if (type.resolve(state.result)) {\n          // `state.result` updated in resolver if matched\n          state.result = type.construct(state.result);\n          state.tag = type.tag;\n          if (state.anchor !== null) {\n            state.anchorMap[state.anchor] = state.result;\n          }\n          break;\n        }\n      }\n    } else if (_hasOwnProperty.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n      if (state.result !== null && type.kind !== state.kind) {\n        throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n      }\n      if (!type.resolve(state.result)) {\n        // `state.result` updated in resolver if matched\n        throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n      } else {\n        state.result = type.construct(state.result);\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n  }\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null || state.anchor !== null || hasContent;\n}\nfunction readDocument(state) {\n  var documentStart = state.position,\n    _position,\n    directiveName,\n    directiveArgs,\n    hasDirectives = false,\n    ch;\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = {};\n  state.anchorMap = {};\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n    ch = state.input.charCodeAt(state.position);\n    if (state.lineIndent > 0 || ch !== 0x25 /* % */) {\n      break;\n    }\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n      if (ch === 0x23 /* # */) {\n        do {\n          ch = state.input.charCodeAt(++state.position);\n        } while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n      if (is_EOL(ch)) break;\n      _position = state.position;\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n    if (ch !== 0) readLineBreak(state);\n    if (_hasOwnProperty.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n  skipSeparationSpace(state, true, -1);\n  if (state.lineIndent === 0 && state.input.charCodeAt(state.position) === 0x2D /* - */ && state.input.charCodeAt(state.position + 1) === 0x2D /* - */ && state.input.charCodeAt(state.position + 2) === 0x2D /* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n  if (state.checkLineBreaks && PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n  state.documents.push(state.result);\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n    if (state.input.charCodeAt(state.position) === 0x2E /* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n  if (state.position < state.length - 1) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n  if (input.length !== 0) {\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A /* LF */ && input.charCodeAt(input.length - 1) !== 0x0D /* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n  var state = new State(input, options);\n  var nullpos = input.indexOf('\\0');\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n  while (state.input.charCodeAt(state.position) === 0x20 /* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n  while (state.position < state.length - 1) {\n    readDocument(state);\n  }\n  return state.documents;\n}\nfunction loadAll(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n  var documents = loadDocuments(input, options);\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\nfunction load(input, options) {\n  var documents = loadDocuments(input, options);\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new YAMLException('expected a single document in the stream, but found more');\n}\nfunction safeLoadAll(input, iterator, options) {\n  if (typeof iterator === 'object' && iterator !== null && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n  return loadAll(input, iterator, common.extend({\n    schema: DEFAULT_SAFE_SCHEMA\n  }, options));\n}\nfunction safeLoad(input, options) {\n  return load(input, common.extend({\n    schema: DEFAULT_SAFE_SCHEMA\n  }, options));\n}\nmodule.exports.loadAll = loadAll;\nmodule.exports.load = load;\nmodule.exports.safeLoadAll = safeLoadAll;\nmodule.exports.safeLoad = safeLoad;","map":{"version":3,"names":["require","common","YAMLException","Mark","DEFAULT_SAFE_SCHEMA","DEFAULT_FULL_SCHEMA","_hasOwnProperty","Object","prototype","hasOwnProperty","CONTEXT_FLOW_IN","CONTEXT_FLOW_OUT","CONTEXT_BLOCK_IN","CONTEXT_BLOCK_OUT","CHOMPING_CLIP","CHOMPING_STRIP","CHOMPING_KEEP","PATTERN_NON_PRINTABLE","PATTERN_NON_ASCII_LINE_BREAKS","PATTERN_FLOW_INDICATORS","PATTERN_TAG_HANDLE","PATTERN_TAG_URI","_class","obj","toString","call","is_EOL","c","is_WHITE_SPACE","is_WS_OR_EOL","is_FLOW_INDICATOR","fromHexCode","lc","escapedHexLen","fromDecimalCode","simpleEscapeSequence","charFromCodepoint","String","fromCharCode","simpleEscapeCheck","Array","simpleEscapeMap","i","State","input","options","filename","schema","onWarning","legacy","json","listener","implicitTypes","compiledImplicit","typeMap","compiledTypeMap","length","position","line","lineStart","lineIndent","documents","generateError","state","message","throwError","throwWarning","directiveHandlers","YAML","handleYamlDirective","name","args","match","major","minor","version","exec","parseInt","checkLineBreaks","TAG","handleTagDirective","handle","prefix","test","tagMap","captureSegment","start","end","checkJson","_position","_length","_character","_result","slice","charCodeAt","result","mergeMappings","destination","source","overridableKeys","sourceKeys","key","index","quantity","isObject","keys","storeMappingPair","keyTag","keyNode","valueNode","startLine","startPos","isArray","readLineBreak","ch","skipSeparationSpace","allowComments","checkIndent","lineBreaks","testDocumentSeparator","writeFoldedLines","count","repeat","readPlainScalar","nodeIndent","withinFlowCollection","preceding","following","captureStart","captureEnd","hasPendingContent","_line","_lineStart","_lineIndent","_kind","kind","readSingleQuotedScalar","readDoubleQuotedScalar","hexLength","hexResult","tmp","readFlowCollection","readNext","_tag","tag","_anchor","anchor","terminator","isPair","isExplicitPair","isMapping","anchorMap","composeNode","push","readBlockScalar","folding","chomping","didReadContent","detectedIndent","textIndent","emptyLines","atMoreIndented","readBlockSequence","detected","readBlockMapping","flowIndent","allowCompact","_pos","atExplicitKey","readTagProperty","isVerbatim","isNamed","tagHandle","tagName","readAnchorProperty","readAlias","alias","parentIndent","nodeContext","allowToSeek","allowBlockStyles","allowBlockScalars","allowBlockCollections","indentStatus","atNewLine","hasContent","typeIndex","typeQuantity","type","blockIndent","resolve","construct","readDocument","documentStart","directiveName","directiveArgs","hasDirectives","loadDocuments","nullpos","indexOf","loadAll","iterator","load","undefined","safeLoadAll","extend","safeLoad","module","exports"],"sources":["D:/Project/YM~Cloud/cloud-front/node_modules/js-yaml/lib/js-yaml/loader.js"],"sourcesContent":["'use strict';\n\n/*eslint-disable max-len,no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar Mark                = require('./mark');\nvar DEFAULT_SAFE_SCHEMA = require('./schema/default_safe');\nvar DEFAULT_FULL_SCHEMA = require('./schema/default_full');\n\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || DEFAULT_FULL_SCHEMA;\n  this.onWarning = options['onWarning'] || null;\n  this.legacy    = options['legacy']    || false;\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  return new YAMLException(\n    message,\n    new Mark(state.filename, state.input, state.position, state.line, (state.position - state.lineStart)));\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, startLine, startPos) {\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty.call(overridableKeys, keyNode) &&\n        _hasOwnProperty.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n    _result[keyNode] = valueNode;\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = {},\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _pos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = {},\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n    _pos = state.position;\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else if (composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n\n    } else {\n      break; // Reading is done. Go to the epilogue.\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _pos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if (state.lineIndent > nodeIndent && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!_hasOwnProperty.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag !== null && state.tag !== '!') {\n    if (state.tag === '?') {\n      // Implicit resolving is not allowed for non-scalar types, and '?'\n      // non-specific tag is only automatically assigned to plain scalars.\n      //\n      // We only need to check kind conformity in case user explicitly assigns '?'\n      // tag, for example like this: \"!<?> [0]\"\n      //\n      if (state.result !== null && state.kind !== 'scalar') {\n        throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n      }\n\n      for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n        type = state.implicitTypes[typeIndex];\n\n        if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n          state.result = type.construct(state.result);\n          state.tag = type.tag;\n          if (state.anchor !== null) {\n            state.anchorMap[state.anchor] = state.result;\n          }\n          break;\n        }\n      }\n    } else if (_hasOwnProperty.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n\n      if (state.result !== null && type.kind !== state.kind) {\n        throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n      }\n\n      if (!type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n      } else {\n        state.result = type.construct(state.result);\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = {};\n  state.anchorMap = {};\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State(input, options);\n\n  var nullpos = input.indexOf('\\0');\n\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  var documents = loadDocuments(input, options);\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new YAMLException('expected a single document in the stream, but found more');\n}\n\n\nfunction safeLoadAll(input, iterator, options) {\n  if (typeof iterator === 'object' && iterator !== null && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  return loadAll(input, iterator, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n}\n\n\nfunction safeLoad(input, options) {\n  return load(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n}\n\n\nmodule.exports.loadAll     = loadAll;\nmodule.exports.load        = load;\nmodule.exports.safeLoadAll = safeLoadAll;\nmodule.exports.safeLoad    = safeLoad;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}