{"ast":null,"code":"import Bus from '@/utils/bus.js';\nimport axios from 'axios';\nexport default {\n  inject: ['config'],\n  data() {\n    return {\n      info: {\n        userName: \"\",\n        email: \"\",\n        password: \"\"\n      },\n      checkPassword: \"\",\n      info2: {\n        userName: \"\",\n        email: \"\",\n        password: \"\",\n        code: \"\"\n      }\n    };\n  },\n  methods: {\n    submitRegister() {\n      if (this.checkPassword != this.info.password) {\n        this.noSame();\n        return;\n      }\n      this.info2.userName = this.info.userName;\n      this.info2.email = this.info.email;\n      this.info2.password = this.info.password;\n      axios.post(\"http://localhost:8080/LogIn/Register\", this.info, this.config).then(result => {\n        if (result.data.code == 1) {\n          //this.inputCode(); return\n          alert(\"--\");\n        }\n        if (result.data.msg == \"UserName_Same_Error\") {\n          this.userNameUse();\n          return;\n        }\n        if (result.data.msg == \"Email_Same_Error\") {\n          this.emailUse();\n          return;\n        }\n        if (result.data.msg == \"Email_Form_Error\") {\n          this.emailFormError();\n          return;\n        }\n      });\n    },\n    cclose() {\n      Bus.$emit(\"closeRegisterWindow\", true);\n    },\n    noSame() {\n      this.$message.error('两次输入的密码不一致');\n    },\n    userNameUse() {\n      this.$message.error('用户名已被使用');\n    },\n    emailUse() {\n      this.$message.error('邮箱名已被使用');\n    },\n    emailFormError() {\n      this.$message.error('邮箱格式不支持');\n    },\n    codeWrongError() {\n      this.$message.error('验证码错误');\n    },\n    success() {\n      this.$message.success(\"注册成功\");\n    },\n    inputCode() {\n      this.$prompt('请输入发送至邮箱的验证码', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        inputErrorMessage: '验证码不正确'\n      }).then(({\n        value\n      }) => {\n        this.info2.code = value;\n        axios.post(\"http://localhost:8080/LogIn/Register/Code\", this.info2, this.config).then(result => {\n          if (result.data.code == 0) {\n            this.codeWrongError();\n            return;\n          }\n          this.success();\n        });\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '取消输入'\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["Bus","axios","inject","data","info","userName","email","password","checkPassword","info2","code","methods","submitRegister","noSame","post","config","then","result","alert","msg","userNameUse","emailUse","emailFormError","cclose","$emit","$message","error","codeWrongError","success","inputCode","$prompt","confirmButtonText","cancelButtonText","inputErrorMessage","value","catch","type","message"],"sources":["src/components/general/new-account.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"new-area\">\r\n        <div>\r\n            <div class=\"text\">注册账号</div>\r\n            <div class=\"close\" @click=\"cclose\"></div>\r\n            <form class=\"fform\">\r\n              <div class=\"sss\"><div class=\"text2\">user-name : </div>\r\n                <input type=\"text\" placeholder=\"输入用户名\" v-model=\"info.userName\"></div>\r\n              <div class=\"sss\"><div class=\"text2\">E-mail : </div>\r\n                <input type=\"email\" placeholder=\"输入邮箱\" v-model=\"info.email\"></div>\r\n              <div class=\"sss\"><div class=\"text2\">password : </div>\r\n                <input type=\"password\" placeholder=\"输入密码\" v-model=\"info.password\"></div>\r\n              <div class=\"sss\"><div class=\"text2\">re-password : </div>\r\n                <input type=\"password\" placeholder=\"再次输入密码\" v-model=\"checkPassword\"></div>\r\n              <input type=\"submit\" class=\"sub\" value=\"提交\" @click=\"submitRegister\">\r\n            </form>\r\n        </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Bus from '@/utils/bus.js'\r\nimport axios from 'axios';\r\nexport default {\r\n  inject : ['config'],\r\n  data () {\r\n    return {\r\n      info : {\r\n        userName : \"\",\r\n        email : \"\",\r\n        password : \"\"\r\n      },\r\n      checkPassword : \"\",\r\n      info2 : {\r\n        userName : \"\",\r\n        email : \"\",\r\n        password : \"\",\r\n        code : \"\"\r\n      }\r\n    }\r\n  },\r\n  methods : {\r\n     submitRegister() {\r\n      if(this.checkPassword != this.info.password){\r\n        this.noSame(); return\r\n      }\r\n      this.info2.userName = this.info.userName;\r\n      this.info2.email = this.info.email;\r\n      this.info2.password = this.info.password;\r\n      axios.post(\"http://localhost:8080/LogIn/Register\", this.info, this.config)\r\n      .then((result) => {\r\n        if(result.data.code == 1) {\r\n          //this.inputCode(); return\r\n          alert(\"--\")\r\n        }\r\n        if(result.data.msg == \"UserName_Same_Error\") {\r\n          this.userNameUse(); return;\r\n        }\r\n        if(result.data.msg == \"Email_Same_Error\") {\r\n          this.emailUse(); return;\r\n        }\r\n        if(result.data.msg == \"Email_Form_Error\") {\r\n          this.emailFormError(); return;\r\n        }\r\n      })\r\n    },\r\n    cclose() {\r\n      Bus.$emit(\"closeRegisterWindow\", true);\r\n    },\r\n    noSame() {\r\n        this.$message.error('两次输入的密码不一致');\r\n    },\r\n    userNameUse() {\r\n      this.$message.error('用户名已被使用');\r\n    },\r\n    emailUse() {\r\n      this.$message.error('邮箱名已被使用');\r\n    },\r\n    emailFormError() {\r\n      this.$message.error('邮箱格式不支持');\r\n    },\r\n    codeWrongError() {\r\n      this.$message.error('验证码错误');\r\n    },\r\n    success() {\r\n      this.$message.success(\"注册成功\")\r\n    },\r\n    inputCode() {\r\n        this.$prompt('请输入发送至邮箱的验证码', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          inputErrorMessage: '验证码不正确'\r\n        }).then(({ value }) => {\r\n          this.info2.code = value\r\n          axios.post(\"http://localhost:8080/LogIn/Register/Code\", this.info2, this.config)\r\n               .then((result) => {\r\n                  if(result.data.code == 0) {\r\n                    this.codeWrongError(); return;\r\n                  }\r\n                  this.success();\r\n               })\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '取消输入'\r\n          });       \r\n        });\r\n      }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    .close {\r\n      /* position: absolute; */\r\n      width: 23px;\r\n      height: 23px;\r\n      float: right;\r\n      transform: translate(-5px, -45px);\r\n      background-image: url(\"@/assets/general/close.png\");\r\n      background-size: 100% 100%;\r\n    }\r\n    .new-area {\r\n        width: 450px;\r\n        height: 300px;\r\n        background-color: white;\r\n        z-index: 9999;\r\n        position: absolute;\r\n        transform: translate(-230px, -140px);\r\n        border-radius: 5px;\r\n        border-style: solid;\r\n        border-color: gray;\r\n        border-width: 1px;\r\n        box-shadow: 1px 1px 1px 1px rgba(0,0,0,0.1);\r\n    }\r\n    .text {\r\n      width: 230px;\r\n      height: 40px;\r\n      font-size: 25px;\r\n      color : gray;\r\n      font-weight: 500;\r\n      margin-top: 10px;\r\n      margin-left: 30px;\r\n      border-bottom-width: 1px;\r\n      border-bottom-color: red;\r\n      border-bottom-style: solid;\r\n    }\r\n    .fform {\r\n      width: 400px;\r\n      height: 200px;\r\n      margin-left: 40px;\r\n      margin-top: 25px;\r\n      font-size: 17px;\r\n      font-weight: 100;\r\n    }\r\n    input {\r\n      width: 200px;\r\n      height: 25px;\r\n    }\r\n    .sss {\r\n      margin-bottom: 15px;\r\n    }\r\n    .text2 {\r\n      width: 120px;\r\n      float: left;\r\n    }\r\n    .sub {\r\n      width: 100px;\r\n      height: 30px;\r\n      background: white;\r\n      float: right;\r\n      margin-right: 180px;\r\n      margin-top: 5px;\r\n    }\r\n</style>"],"mappings":"AAuBA,OAAAA,GAAA;AACA,OAAAC,KAAA;AACA;EACAC,MAAA;EACAC,KAAA;IACA;MACAC,IAAA;QACAC,QAAA;QACAC,KAAA;QACAC,QAAA;MACA;MACAC,aAAA;MACAC,KAAA;QACAJ,QAAA;QACAC,KAAA;QACAC,QAAA;QACAG,IAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,eAAA;MACA,SAAAJ,aAAA,SAAAJ,IAAA,CAAAG,QAAA;QACA,KAAAM,MAAA;QAAA;MACA;MACA,KAAAJ,KAAA,CAAAJ,QAAA,QAAAD,IAAA,CAAAC,QAAA;MACA,KAAAI,KAAA,CAAAH,KAAA,QAAAF,IAAA,CAAAE,KAAA;MACA,KAAAG,KAAA,CAAAF,QAAA,QAAAH,IAAA,CAAAG,QAAA;MACAN,KAAA,CAAAa,IAAA,8CAAAV,IAAA,OAAAW,MAAA,EACAC,IAAA,CAAAC,MAAA;QACA,IAAAA,MAAA,CAAAd,IAAA,CAAAO,IAAA;UACA;UACAQ,KAAA;QACA;QACA,IAAAD,MAAA,CAAAd,IAAA,CAAAgB,GAAA;UACA,KAAAC,WAAA;UAAA;QACA;QACA,IAAAH,MAAA,CAAAd,IAAA,CAAAgB,GAAA;UACA,KAAAE,QAAA;UAAA;QACA;QACA,IAAAJ,MAAA,CAAAd,IAAA,CAAAgB,GAAA;UACA,KAAAG,cAAA;UAAA;QACA;MACA;IACA;IACAC,OAAA;MACAvB,GAAA,CAAAwB,KAAA;IACA;IACAX,OAAA;MACA,KAAAY,QAAA,CAAAC,KAAA;IACA;IACAN,YAAA;MACA,KAAAK,QAAA,CAAAC,KAAA;IACA;IACAL,SAAA;MACA,KAAAI,QAAA,CAAAC,KAAA;IACA;IACAJ,eAAA;MACA,KAAAG,QAAA,CAAAC,KAAA;IACA;IACAC,eAAA;MACA,KAAAF,QAAA,CAAAC,KAAA;IACA;IACAE,QAAA;MACA,KAAAH,QAAA,CAAAG,OAAA;IACA;IACAC,UAAA;MACA,KAAAC,OAAA;QACAC,iBAAA;QACAC,gBAAA;QACAC,iBAAA;MACA,GAAAjB,IAAA;QAAAkB;MAAA;QACA,KAAAzB,KAAA,CAAAC,IAAA,GAAAwB,KAAA;QACAjC,KAAA,CAAAa,IAAA,mDAAAL,KAAA,OAAAM,MAAA,EACAC,IAAA,CAAAC,MAAA;UACA,IAAAA,MAAA,CAAAd,IAAA,CAAAO,IAAA;YACA,KAAAiB,cAAA;YAAA;UACA;UACA,KAAAC,OAAA;QACA;MACA,GAAAO,KAAA;QACA,KAAAV,QAAA;UACAW,IAAA;UACAC,OAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}