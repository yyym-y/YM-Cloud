{"ast":null,"code":"'use strict';\n\nvar common = require('./common');\nfunction Mark(name, buffer, position, line, column) {\n  this.name = name;\n  this.buffer = buffer;\n  this.position = position;\n  this.line = line;\n  this.column = column;\n}\nMark.prototype.getSnippet = function getSnippet(indent, maxLength) {\n  var head, start, tail, end, snippet;\n  if (!this.buffer) return null;\n  indent = indent || 4;\n  maxLength = maxLength || 75;\n  head = '';\n  start = this.position;\n  while (start > 0 && '\\x00\\r\\n\\x85\\u2028\\u2029'.indexOf(this.buffer.charAt(start - 1)) === -1) {\n    start -= 1;\n    if (this.position - start > maxLength / 2 - 1) {\n      head = ' ... ';\n      start += 5;\n      break;\n    }\n  }\n  tail = '';\n  end = this.position;\n  while (end < this.buffer.length && '\\x00\\r\\n\\x85\\u2028\\u2029'.indexOf(this.buffer.charAt(end)) === -1) {\n    end += 1;\n    if (end - this.position > maxLength / 2 - 1) {\n      tail = ' ... ';\n      end -= 5;\n      break;\n    }\n  }\n  snippet = this.buffer.slice(start, end);\n  return common.repeat(' ', indent) + head + snippet + tail + '\\n' + common.repeat(' ', indent + this.position - start + head.length) + '^';\n};\nMark.prototype.toString = function toString(compact) {\n  var snippet,\n    where = '';\n  if (this.name) {\n    where += 'in \"' + this.name + '\" ';\n  }\n  where += 'at line ' + (this.line + 1) + ', column ' + (this.column + 1);\n  if (!compact) {\n    snippet = this.getSnippet();\n    if (snippet) {\n      where += ':\\n' + snippet;\n    }\n  }\n  return where;\n};\nmodule.exports = Mark;","map":{"version":3,"names":["common","require","Mark","name","buffer","position","line","column","prototype","getSnippet","indent","maxLength","head","start","tail","end","snippet","indexOf","charAt","length","slice","repeat","toString","compact","where","module","exports"],"sources":["D:/Project/YM~Cloud/cloud-front/node_modules/js-yaml/lib/js-yaml/mark.js"],"sourcesContent":["'use strict';\n\n\nvar common = require('./common');\n\n\nfunction Mark(name, buffer, position, line, column) {\n  this.name     = name;\n  this.buffer   = buffer;\n  this.position = position;\n  this.line     = line;\n  this.column   = column;\n}\n\n\nMark.prototype.getSnippet = function getSnippet(indent, maxLength) {\n  var head, start, tail, end, snippet;\n\n  if (!this.buffer) return null;\n\n  indent = indent || 4;\n  maxLength = maxLength || 75;\n\n  head = '';\n  start = this.position;\n\n  while (start > 0 && '\\x00\\r\\n\\x85\\u2028\\u2029'.indexOf(this.buffer.charAt(start - 1)) === -1) {\n    start -= 1;\n    if (this.position - start > (maxLength / 2 - 1)) {\n      head = ' ... ';\n      start += 5;\n      break;\n    }\n  }\n\n  tail = '';\n  end = this.position;\n\n  while (end < this.buffer.length && '\\x00\\r\\n\\x85\\u2028\\u2029'.indexOf(this.buffer.charAt(end)) === -1) {\n    end += 1;\n    if (end - this.position > (maxLength / 2 - 1)) {\n      tail = ' ... ';\n      end -= 5;\n      break;\n    }\n  }\n\n  snippet = this.buffer.slice(start, end);\n\n  return common.repeat(' ', indent) + head + snippet + tail + '\\n' +\n         common.repeat(' ', indent + this.position - start + head.length) + '^';\n};\n\n\nMark.prototype.toString = function toString(compact) {\n  var snippet, where = '';\n\n  if (this.name) {\n    where += 'in \"' + this.name + '\" ';\n  }\n\n  where += 'at line ' + (this.line + 1) + ', column ' + (this.column + 1);\n\n  if (!compact) {\n    snippet = this.getSnippet();\n\n    if (snippet) {\n      where += ':\\n' + snippet;\n    }\n  }\n\n  return where;\n};\n\n\nmodule.exports = Mark;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}